package InsidemeClasses
{
	[SWF(frameRate="60")]
	
	import flash.display.MovieClip;
	import flash.display.Sprite;
	import flash.events.Event;
	import flash.events.KeyboardEvent;
	import flash.events.MouseEvent;
	import flash.text.TextField;
	import flash.text.TextFormat;
	import flash.ui.Mouse;
	import flash.utils.getQualifiedClassName;
	import flash.display.StageDisplayState;
	import flash.display.StageScaleMode;
	import flash.events.FullScreenEvent;
	import InsidemeClasses.*;
	import InsidemeClasses.Inimigo.*;
	import InsidemeClasses.Cenario.*;
	import flash.filters.ColorMatrixFilter;
	import flash.utils.*;
	import flash.events.TimerEvent;
	import flash.display.Stage;
	import flash.filters.*;
	import  flash.events.MouseEvent;
	


	/**
	 * ...
	 * @author Luiz Carlos Machado
	 */
	public class Main extends MovieClip
	{
		public var palco:Stage;
		public var laura: Personagem = new Personagem ();
		private var camera:MovieClip = new MovieClip();
		public var direita:Direita =  new Direita();
		public var esquerda:Esquerda =  new Esquerda();
		public var pular:Pular =  new Pular();
		public var mascara:MascaraSelf = new MascaraSelf();
		public var efeitoCirculo:EfeitoCirculoAtk = new EfeitoCirculoAtk();
		public var diario:Diario = new Diario();
		public var circuloAtk:CirculoAtk = new CirculoAtk();
		private var esquerdaPress:Boolean = false;
		private var direitaPress:Boolean = false;
		private var wPress:Boolean = false;
		private var qPress:Boolean = false;
		private var aPress:Boolean = false;
		private var ePress:Boolean = false;
		public var danoMaxOn:Boolean = false;
		private var btn_Espaco:Boolean = true;
		private var escalar:Boolean = false;
		private var ataqueLaura:Boolean = false;
		private var blocos:Array = [];
		private var moedas:Array = [];
		private var circulos:Array = [];
		private var circEfeito:Array = [];
		private var questoes:Array = [];
		private var empurrarCaixas:Array = [];
		private var posicaoInimigo_lvl1:Array = [];
		private var posicaoInimigo_lvl2:Array = [];
		private var posicaoInimigo_lvl3:Array = [];
		private var posicaoInimigo_lvl4:Array = [];
		private var posicaoInimigo_lvl5:Array = [];
		private var posicaoBorboleta:Array = [];
		public var inimigos_lvl1:Array = [];
		public var inimigos_lvl2:Array = [];
		public var inimigos_lvl3:Array = [];
		public var inimigos_lvl4:Array = [];
		public var inimigos_lvl5:Array = [];
		private var portas:Array = [];
		private var nuvens:Array = [];
		private var particulas:Array = [];
		private var telaLargura:int = 1920;
		private var telaAltura:int = 1080;
		private var pontos:int = 0;
		private var padraoChao:int = 0;
		private var current:int = 0;
		private var velCamera:int = 9;
		public var tempoMaxEf: int = 50;
		public var danoOn:Boolean = true;
		public var tempoEf:int = tempoMaxEf;
		public var EfeitoPorcentagem:Number = tempoEf / tempoMaxEf;
		private var posicaoLauraX1:int = 250;
		private var posicaoLauraY1:int = laura.chao;
		private var posPadraoCamY1:int = -1200;
		private var posPadraoCamX1:int = 0;
		private var posicaoLauraX2:int = 4790;
		private var posicaoLauraY2:int = laura.chao;
		private var posPadraoCamY2:int = -1200;
		private var posPadraoCamX2:int = -3100;
		private var velCamera2:int = 10;
		private var duracaoEfeitoAtk:int = 10;
		private var cameraMovD:Boolean = false;
		private var cameraMovE:Boolean = false;
		private var cameraMovC:Boolean = false;
		private var addEfeitoCirculo:Boolean = false;
		private var indiceMapa:int = 0;
		private var plataformaAltura:Number = 0;
		private var plataformaLargura:Number = 0;
		private var velFundo:Number = 0.5;
		private var velSubFundo:Number = 1;
		private var velMeio:Number = 5;
		private var cont:int = 0;
		private var cont2:int = 0;
		private var cont3:int = 0;
		private var cont4:int = 0;
		private var cont5:int = 0;
		private var cont6:int = 0;
		private var cont7:int = 0;
		private var cont8:int = 0;
		private var contD:int = 0;
		private var contE:int = 0;
		private var larguraPersonagem:int = 60;
		private var alturaPersonagem:int = 200;
		private var tempo:Timer = new Timer(1000);
		private var tempoEfeitoAtk:Timer = new Timer(1000);
		private var minutos:Number;
		private var segundos:Number;
		private var s:String;
		private var m:String;
		private var posFundo:int = 0;
		private var posSubFundo:int = 0;
		private var barraDeVida:BarraVida = new BarraVida();
		private var barraDeEfeito:BarraTempoEfeito = new BarraTempoEfeito();
		private var caixaTexto:TextField = new TextField();
		private var caixaTextoTime:TextField = new TextField();
		private var estiloTexto:TextFormat = new TextFormat("Prestige Elite Std",40);
		public var meio_1:Meio_1 = new Meio_1();
		public var fundo_1:Fundo_1 = new Fundo_1();
		public var subFundo_1:SubFundo_1 = new SubFundo_1();
		public var meio_2:Meio_2 = new Meio_2();
		public var fundo_2:Fundo_2 = new Fundo_2();
		public var subFundo_2:SubFundo_2 = new SubFundo_2();
		public var meio_3:Meio_3 = new Meio_3();
		public var fundo_3:Fundo_3 = new Fundo_3();
		public var subFundo_3:SubFundo_3 = new SubFundo_3();
		public var meio_4:Meio_4 = new Meio_4();
		public var fundo_4:Fundo_4 = new Fundo_4();
		public var subFundo_4:SubFundo_4 = new SubFundo_4();
		public var meio_5:Meio_5 = new Meio_5();
		public var fundo_5:Fundo_5 = new Fundo_5();
		public var subFundo_5:SubFundo_5 = new SubFundo_5();
		public var meio_6:Meio_6 = new Meio_6();
		public var fundo_6:Fundo_6 = new Fundo_6();
		public var subFundo_6:SubFundo_6 = new SubFundo_6();
		public var meio_7:Meio_7 = new Meio_7();
		public var fundo_7:Fundo_7 = new Fundo_7();
		public var subFundo_7:SubFundo_7 = new SubFundo_7();
		public var meio_8:Meio_8 = new Meio_8();
		public var fundo_8:Fundo_8 = new Fundo_8();
		public var subFundo_8:SubFundo_8 = new SubFundo_8();
		private var rc:Number = 1/3 ;
		private var gc:Number = 1/3 ;
		private var bc:Number = 1/3 ;
		private var cmf:ColorMatrixFilter = new ColorMatrixFilter([rc, gc, bc, 0, 0, rc, gc, bc, 0, 0, rc, gc, bc, 0, 0, 0, 0, 0, 1, 0]);
		private var classeFundo_1:Class = Class(getDefinitionByName(getQualifiedClassName(fundo_1)));
		private var classeSubFundo_1:Class = Class(getDefinitionByName(getQualifiedClassName(subFundo_1)));
		private var classeMeio_1:Class = Class(getDefinitionByName(getQualifiedClassName(meio_1)));
		private var classeFundo_2:Class = Class(getDefinitionByName(getQualifiedClassName(fundo_2)));
		private var classeSubFundo_2:Class = Class(getDefinitionByName(getQualifiedClassName(subFundo_2)));
		private var classeMeio_2:Class = Class(getDefinitionByName(getQualifiedClassName(meio_2)));
		private var classeFundo_3:Class = Class(getDefinitionByName(getQualifiedClassName(fundo_3)));
		private var classeSubFundo_3:Class = Class(getDefinitionByName(getQualifiedClassName(subFundo_3)));
		private var classeMeio_3:Class = Class(getDefinitionByName(getQualifiedClassName(meio_3)));
		private var classeFundo_4:Class = Class(getDefinitionByName(getQualifiedClassName(fundo_4)));
		private var classeSubFundo_4:Class = Class(getDefinitionByName(getQualifiedClassName(subFundo_4)));
		private var classeMeio_4:Class = Class(getDefinitionByName(getQualifiedClassName(meio_4)));
		private var classeFundo_5:Class = Class(getDefinitionByName(getQualifiedClassName(fundo_5)));
		private var classeSubFundo_5:Class = Class(getDefinitionByName(getQualifiedClassName(subFundo_5)));
		private var classeMeio_5:Class = Class(getDefinitionByName(getQualifiedClassName(meio_5)));
		private var classeFundo_6:Class = Class(getDefinitionByName(getQualifiedClassName(fundo_6)));
		private var classeSubFundo_6:Class = Class(getDefinitionByName(getQualifiedClassName(subFundo_6)));
		private var classeMeio_6:Class = Class(getDefinitionByName(getQualifiedClassName(meio_6)));
		private var classeFundo_7:Class = Class(getDefinitionByName(getQualifiedClassName(fundo_7)));
		private var classeSubFundo_7:Class = Class(getDefinitionByName(getQualifiedClassName(subFundo_7)));
		private var classeMeio_7:Class = Class(getDefinitionByName(getQualifiedClassName(meio_7)));
		private var classeFundo_8:Class = Class(getDefinitionByName(getQualifiedClassName(fundo_8)));
		private var classeSubFundo_8:Class = Class(getDefinitionByName(getQualifiedClassName(subFundo_8)));
		private var classeMeio_8:Class = Class(getDefinitionByName(getQualifiedClassName(meio_8)));
		private var cloneFundo_1:MovieClip = new classeFundo_1;
		private var cloneSubFundo_1:MovieClip = new classeSubFundo_1;
		private var cloneMeio_1:MovieClip = new classeMeio_1;
		private var cloneFundo_2:MovieClip = new classeFundo_2;
		private var cloneSubFundo_2:MovieClip = new classeSubFundo_2;
		private var cloneMeio_2:MovieClip = new classeMeio_2;
		private var cloneFundo_3:MovieClip = new classeFundo_3;
		private var cloneSubFundo_3:MovieClip = new classeSubFundo_3;
		private var cloneMeio_3:MovieClip = new classeMeio_3;
		private var cloneFundo_4:MovieClip = new classeFundo_4;
		private var cloneSubFundo_4:MovieClip = new classeSubFundo_4;
		private var cloneMeio_4:MovieClip = new classeMeio_4;
		private var cloneFundo_5:MovieClip = new classeFundo_5;
		private var cloneSubFundo_5:MovieClip = new classeSubFundo_5;
		private var cloneMeio_5:MovieClip = new classeMeio_5;
		private var cloneFundo_6:MovieClip = new classeFundo_6;
		private var cloneSubFundo_6:MovieClip = new classeSubFundo_6;
		private var cloneMeio_6:MovieClip = new classeMeio_6;
		private var cloneFundo_7:MovieClip = new classeFundo_7;
		private var cloneSubFundo_7:MovieClip = new classeSubFundo_7;
		private var cloneMeio_7:MovieClip = new classeMeio_7;
		private var cloneFundo_8:MovieClip = new classeFundo_8;
		private var cloneSubFundo_8:MovieClip = new classeSubFundo_8;
		private var cloneMeio_8:MovieClip = new classeMeio_8;
		private var cameraSelf_1:MovieClip = new MovieClip;
		private var cameraSelf_2:MovieClip = new MovieClip;
		private var cameraSelf_3:MovieClip = new MovieClip;
		private var cameraSelf_4:MovieClip = new MovieClip;
		private var cameraSelf_5:MovieClip = new MovieClip;
		private var cameraSelf_6:MovieClip = new MovieClip;
		private var cameraSelf_7:MovieClip = new MovieClip;
		private var cameraSelf_8:MovieClip = new MovieClip;
		private var local:int = 0;
		private var mapa:Array = [[
		 //Indice mapa = 0
		[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
		[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
		[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
		[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 0, 1],
		[1, 0, 0, 0, 0, 0, 0, 0, 0, 7, 7, 0, 0, 7, 0, 0, 0, 7, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],   
		[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
		[1, 0, 0, 0, 0, 0, 7, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
		[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
		[1, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
		[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],   
		[1, 0, 0, 0, 0, 7, 7, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
		[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
		[1, 0, 0, 0, 7, 0, 0, 0, 0, 0, 0, 7, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 7, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 7, 7, 0, 0, 0, 0, 0, 7, 0, 0, 0, 0, 0, 1],
		[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
		[1, 0, 0, 0, 0, 0, 7, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 7, 7, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
		[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 7, 7, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1],
		[1, 7, 7, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 7, 7, 0, 0, 0, 0, 0, 0, 0, 0, 1],
		[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8],
		[1, 0, 0, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 7, 0, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 8],
		[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8]],
		[
		  //Indice mapa = 1
		[1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1],
		[1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1],
		[1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1],
		[1, 0, 0, 0, 0, 0, 0, 0, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1],
		[1, 0, 0, 0, 7, 7, 7, 7, 7, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 7, 7, 7, 1],   
		[1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 7, 7, 0, 0, 7, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
		[1, 7, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 7, 7, 7, 7, 7, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 7, 0, 0, 0, 0, 0, 1],
		[1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 7, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
		[1, 0, 0, 0, 7, 7, 7, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 7, 0, 0, 1],
		[1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],   
		[1, 7, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 7, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
		[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
		[1, 0, 0, 7, 7, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
		[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
		[1, 0, 0, 0, 0, 0, 0, 0, 7, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 7, 0, 0, 0, 0, 1],
		[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1],
		[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 7, 7, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 7, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 7, 0, 0, 1],
		[8, 0, 0, 0, 0, 0, 0, 0, 7, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 8],
		[8, 0, 0, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 7, 0, 0, 0, 11, 0, 0, 1, 1, 0, 0, 0, 7, 0, 0, 0, 0, 8],
		[8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 8]],
		[
		  //Indice mapa = 2
		[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
		[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
		[1, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
		[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 7, 7, 7, 7, 0, 0, 7, 7, 7, 7, 0, 0, 0, 1],
		[1, 7, 7, 0, 0, 7, 7, 7, 0, 0, 7, 0, 7, 0, 7, 0, 1, 0, 7, 7, 0, 0, 0, 7, 7, 7, 7, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 7, 0, 0, 1],   
		[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
		[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 7, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 12, 0, 0, 0, 7, 1],
		[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 7, 7, 7, 7, 7, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 7, 7, 0, 1],
		[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 7, 0, 0, 0, 1],
		[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 7, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1],   
		[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 7, 0, 0, 0, 0, 1],
		[1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 7, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 7, 7, 1, 0, 0, 0, 0, 0, 1],
		[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 7, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1],
		[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1],
		[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 7, 1, 7, 0, 0, 0, 0, 1],
		[1, 0, 0, 2, 0, 0, 0, 0, 0, 12, 0, 0, 7, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 7, 7, 7, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1],
		[1, 7, 7, 7, 7, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 7, 0, 7, 0, 7, 7, 0, 0, 7, 7, 0, 0, 0, 0, 0, 0, 7, 7, 0, 0, 7, 0, 0, 7, 7, 0, 0, 0, 1, 0, 7, 0, 0, 0, 1],
		[8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 8],
		[8, 0, 0, 0, 0, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 7, 1, 7, 1, 0, 0, 0, 8],
		[8,0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 8]],
		[
		  //Indice mapa = 3
		[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
		[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
		[1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
		[1, 0, 0, 0, 0, 0, 7, 7, 0, 7, 7, 7, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 7, 0, 7, 0, 0, 7, 7, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
		[1, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 7, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1],   
		[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 7, 0, 1],
		[1, 7, 0, 0, 0, 0, 7, 7, 7, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 7, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
		[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 7, 1],
		[1, 0, 7, 0, 0, 7, 0, 0, 7, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 7, 0, 1, 0, 0, 0, 0, 0, 0, 1, 7, 7, 0, 0, 7, 0, 0, 0, 0, 0, 0, 1],
		[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 7, 0, 0, 0, 1, 0, 0, 0, 7, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 7, 0, 1],   
		[1, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 7, 7, 7, 1, 0, 0, 11, 0, 1, 0, 0, 0, 0, 7, 0, 1, 0, 7, 7, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
		[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 7, 0, 1, 0, 0, 0, 7, 0, 0, 1, 0, 0, 7, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 7, 1],
		[1, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 7, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 7, 0, 1, 0, 0, 0, 0, 0, 7, 0, 0, 0, 0, 0, 1],
		[1, 0, 0, 0, 0, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 7, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
		[1, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 7, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1],
		[1, 0, 0, 0, 0, 7, 0, 0, 7, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 7, 1],
		[1, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 7, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1],
		[8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 13, 0, 0, 0, 0, 0, 0, 0, 0, 0, 7, 0, 1, 13, 7, 0, 0, 8],
		[8, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 7, 0, 11, 1, 1, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 7, 0, 0, 0, 0, 0, 7, 0, 1, 1, 7, 0, 0, 0, 8],
		[8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 8]],
		[
		  //Indice mapa = 4
		[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
		[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
		[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, 1],
		[1, 0, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 7, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
		[1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 7, 7, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],   
		[1, 7, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 7, 0, 0, 1, 0, 0, 7, 7, 7, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
		[1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 7, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
		[1, 0, 7, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 7, 1, 0, 0, 0, 0, 7, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 7, 0, 7, 0, 0, 7, 0, 7, 7, 7, 1],
		[1, 12, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 12, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
		[1, 7, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 7, 7, 7, 0, 0, 0, 0, 0, 7, 0, 0, 0, 7, 7, 0, 0, 0, 0, 0, 0, 0, 0, 7, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],   
		[1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 7, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
		[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 7, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
		[1, 0, 0, 0, 0, 0, 0, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
		[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 13, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 7, 7, 7, 7, 0, 0, 0, 0, 0, 1],
		[1, 0, 0, 0, 0, 0, 0, 7, 7, 0, 0, 0, 7, 0, 0, 0, 0, 0, 7, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
		[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
		[1, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
		[8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 13, 0, 8],
		[8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8],
		[8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8]],
		[
		  //Indice mapa = 5
		[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
		[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
		[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 11, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10, 0, 0, 1],
		[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
		[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],   
		[1, 7, 7, 7, 0, 0, 0, 7, 0, 7, 7, 0, 0, 0, 0, 0, 0, 7, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
		[1, 0, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 7, 0, 1, 0, 7, 0, 0, 7, 0, 0, 7, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1],
		[1, 0, 0, 0, 7, 7, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 13, 0, 0, 0, 0, 0, 0, 0, 7, 0, 0, 0, 0, 1, 0, 7, 0, 0, 1],
		[1, 0, 0, 0, 0, 7, 7, 7, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1],
		[1, 2, 0, 0, 0, 0, 0, 0, 13, 7, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 7, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1],   
		[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 7, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 7, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1],
		[1, 0, 0, 0, 0, 0, 0, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 7, 7, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1],
		[1, 0, 13, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 13, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1],
		[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 7, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 7, 0, 0, 7, 0, 1, 1, 0, 0, 0, 0, 1],
		[1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1],
		[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 7, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1],
		[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 7, 0, 0, 1, 1, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 7, 0, 0, 0, 1],
		[8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 7, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 11, 0, 0, 8],
		[8, 0, 0, 0, 0, 0, 0, 0, 0, 7, 0, 0, 0, 1, 0, 0, 7, 0, 1, 1, 0, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 7, 0, 0, 0, 0, 0, 0, 1, 1, 7, 0, 0, 0, 8],
		[8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 8]],
		[
		  //Indice mapa = 6
		[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
		[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
		[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
		[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 7, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
		[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 1],   
		[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1],
		[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1],
		[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1],
		[1, 0, 0, 0, 0, 0, 0, 7, 0, 0, 7, 0, 0, 7, 0, 0, 7, 0, 0, 7, 0, 0, 7, 0, 0, 7, 0, 0, 7, 0, 0, 7, 0, 0, 7, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1],
		[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1],   
		[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1],
		[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1],
		[1, 0, 0, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1],
		[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1],
		[1, 0, 0, 0, 7, 0, 0, 0, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1],
		[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1],
		[1, 0, 0, 0, 0, 7, 0, 0, 0, 0, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1],
		[8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 8],
		[8, 0, 0, 0, 7, 0, 0, 0, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 8],
		[8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 5, 0, 0, 0, 2, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 8]],
		[
		  //Indice mapa = 7
		[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
		[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
		[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
		[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
		[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],   
		[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
		[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
		[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
		[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
		[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],   
		[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
		[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
		[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
		[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
		[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
		[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
		[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
		[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
		[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
		[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1]],
		];
		private var estiloMapa:Array = [[
		  //Indice mapa = 0
		[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
		[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
		[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
		[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
		[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, [1,5,0,200,0], 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],   
		[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
		[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
		[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
		[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
		[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],   
		[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
		[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
		[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, [1,5,0,300,0], [1,5,0,300,0], 0, 0, 0, 0, 0, [1,0,3,0,400], 0, 0, 0, 0, 0, 0],
		[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
		[0, 0, 0, 0, 0, 0, [1,5,0,200,0], [1,5,0,200,0], 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
		[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
		[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
		[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
		[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
		[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]],
		[
		  //Indice mapa = 1
		[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
		[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
		[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
		[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
		[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],   
		[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
		[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
		[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
		[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
		[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],   
		[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, [1,5,0,300,0], 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
		[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
		[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
		[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, [1,0,3,0,300], 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
		[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
		[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
		[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
		[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
		[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
		[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]],
		[
		  //Indice mapa = 2
		[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
		[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
		[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
		[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
		[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],   
		[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
		[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
		[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
		[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
		[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],   
		[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
		[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
		[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
		[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
		[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
		[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
		[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
		[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
		[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
		[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]],
		[
		  //Indice mapa = 3
		[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
		[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
		[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
		[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
		[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],   
		[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
		[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
		[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
		[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
		[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],   
		[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
		[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
		[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, [1,0,3,0,400], 0, 0, 0, 0, 0, 0],
		[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
		[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
		[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
		[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
		[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
		[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
		[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]],
		[
		  //Indice mapa = 4
		[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
		[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
		[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
		[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
		[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],   
		[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
		[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
		[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
		[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
		[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],   
		[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
		[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
		[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
		[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
		[0, 0, 0, 0, 0, 0, 0, [1,5,0,200,0], [1,5,0,200,0], 0, 0, 0, [1,5,0,100,0], 0, 0, 0, 0, 0, [1,3,0,300,0], 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, [1,0,3,0,400], 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
		[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
		[0, 0, 0, [1,0,3,0,200], 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
		[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
		[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
		[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]],
		[
		  //Indice mapa = 5
		[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
		[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
		[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
		[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
		[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],   
		[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
		[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
		[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
		[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
		[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],   
		[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, [1,0,3,0,200], 0, 0, 0, 0, 0, 0, 0, [1,0,3,0,300], 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
		[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
		[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
		[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
		[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
		[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
		[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
		[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
		[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
		[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]],
		[
		  //Indice mapa = 6
		[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
		[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
		[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
		[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
		[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, [1,5,0,200,0], 0, 0, 0, 0, 0, 0, 0, 0],   
		[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
		[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
		[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
		[0, 0, 0, 0, 0, 0, 0, [1,0,3,0,300], 0, 0, [1,0,2,0,500], 0, 0, [1,0,5,0,200], 0, 0, [1,0,7,0,600], 0, 0, [1,0,3,0,400], 0, 0, [1,0,3,0,300], 0, 0, [1,0,4,0,400], 0, 0, [1,0,6,0,300], 0, 0, [1,0,2,0,100], 0, 0, [1,0,3,0,500], 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
		[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],   
		[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
		[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
		[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
		[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
		[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
		[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
		[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
		[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
		[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
		[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]],
		[
		  //Indice mapa = 7
		[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
		[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
		[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
		[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
		[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],   
		[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
		[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
		[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
		[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
		[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],   
		[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
		[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
		[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
		[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
		[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
		[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
		[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
		[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
		[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
		[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]],
		];

		public function Main()
		{
			
   			addEventListener(Event.ADDED_TO_STAGE, construct, false, 0, true);
			
			
			camera.y = posPadraoCamY1;
			addChild(camera);
			
			diario.x = 1800;
			diario.y = 950;
			addChild(diario);
			
			direita.x = 700;
			direita.y = 950;
			addChild(direita);
			direita.addEventListener(MouseEvent.MOUSE_DOWN,on_mouseDown);
			direita.addEventListener(MouseEvent.MOUSE_UP,on_mouseUp);
			
			esquerda.x = 400;
			esquerda.y = 950;
			addChild(esquerda);
			esquerda.addEventListener(MouseEvent.MOUSE_DOWN,on_mouseDown2);
			esquerda.addEventListener(MouseEvent.MOUSE_UP,on_mouseUp2);
			
			pular.x = 1500;
			pular.y = 950;
			addChild(pular);
			pular.addEventListener(MouseEvent.MOUSE_DOWN,on_mouseDown3);
			pular.addEventListener(MouseEvent.MOUSE_UP,on_mouseUp3);
			
			circuloAtk.x = 960;
			circuloAtk.y = 980;
			addChild(circuloAtk);
			
			barraDeVida.x = 260;
			barraDeVida.y = 980;
			addChild(barraDeVida);
			
			
			barraDeEfeito.x = 135;
			barraDeEfeito.y = 1000;
			addChild(barraDeEfeito);
			
			
			caixaTextoTime.x = 75;
			caixaTextoTime.y = 1010;
			caixaTextoTime.defaultTextFormat = estiloTexto;
			caixaTextoTime.textColor = 0xFFFFFF;
			caixaTextoTime.width = 400;
			addChild(caixaTextoTime);
			
			laura.x = posicaoLauraX1;
			laura.y = posicaoLauraY1;
			camera.addChild(laura);
			
			tempo.addEventListener(TimerEvent.TIMER, atualizaTempo, false, 0, true);
			camera.setChildIndex(laura, camera.numChildren -1);
			iniciarRelogio(0, 30);
			carregarMapas(0, -1);
			carregarCenario(0, 0);
			indiceMapa = 0;
			
			
			
		}
		public function construct(e:Event=null):void 
		{ 
			
 			removeEventListener(Event.ADDED_TO_STAGE, construct);
			stage.addEventListener(KeyboardEvent.KEY_DOWN, apertarTecla, false, 0, true);
			stage.addEventListener(KeyboardEvent.KEY_UP, soltarTecla, false, 0, true);
			
			
			
		}
		function on_mouseDown(e:MouseEvent):void
		{
				cameraMovD = true;
				direitaPress = true;
				wPress = false;
				esquerdaPress = false;
				cont2 = 2;
		}
 
		function on_mouseUp(e:MouseEvent):void
		{
			direitaPress = false;
			cameraMovD = false;
		}
		
		function on_mouseDown2(e:MouseEvent):void
		{
				esquerdaPress = true;
				cameraMovE = true;
				wPress = false;
				direitaPress = false;
				cont2 = 1;
		}
 
		function on_mouseUp2(e:MouseEvent):void
		{
			esquerdaPress = false;
			cameraMovE = false;
		}
		function on_mouseDown3(e:MouseEvent):void
		{
				cont++;;
				if (laura.pular)
				{
					wPress = true;
					cameraMovC = true;
				}
				if (cont > 1)
				{
					wPress = false;
				}
		}
 
		function on_mouseUp3(e:MouseEvent):void
		{
			cameraMovC = false;
				wPress = false;
				cont = 0;
		}
		public function cliqueNoBotao(e:MouseEvent)
		{
			VariaveisLocais.pausarJogo = true;
			diario.gotoAndStop(3);
			diario.buttonMode = false;
			diario.removeEventListener(MouseEvent.CLICK, cliqueNoBotao);
			
		}
		
		
		public function cliqueNoBotaoCirculo(e:MouseEvent)
		{
			circAtk();
		}
		public function circAtk()
		{
			circuloAtk.gotoAndStop(1);
			circuloAtk.buttonMode = false;
			circuloAtk.removeEventListener(MouseEvent.CLICK, cliqueNoBotaoCirculo);
			tempoEfeitoAtk.addEventListener(TimerEvent.TIMER, atualizaTempoAtk, false, 0, true);
			tempoEfeitoAtk.start();
			camera.addChild(efeitoCirculo);
			circEfeito.push(efeitoCirculo);
			cont8 = 1;
			ataqueLaura = true;
			addEfeitoCirculo = true;
		}
		public function falsoSelf(indice:int, pos:int):void
		{
			if(pos == 0 && indice == 0)
			{
				cloneFundo_1.x = 0;
				cloneFundo_1.y = -200;
				cloneSubFundo_1.x = 0;
				cloneSubFundo_1.y = -200;
				cloneMeio_1.x = 0;
				cloneMeio_1.y = 1850;
				
				cloneFundo_1.filters = [cmf];
				cloneSubFundo_1.filters = [cmf];
				cloneMeio_1.filters = [cmf];
				
				cameraSelf_1.addChildAt(cloneFundo_1, 0);
				cameraSelf_1.addChildAt(cloneSubFundo_1, 1);
				cameraSelf_1.addChildAt(cloneMeio_1, 2);
				cameraSelf_1.addChild(mascara);
				cameraSelf_1.mask = mascara;
				camera.addChildAt(cameraSelf_1,7);
			}
			if(pos == 1 && indice == 0)
			{
				cloneFundo_1.x = 0;
				cloneFundo_1.y = -200;
				cloneSubFundo_1.x = 0;
				cloneSubFundo_1.y = -200;
				cloneMeio_1.x = 0;
				cloneMeio_1.y = 1850;
				
				cloneFundo_1.filters = [cmf];
				cloneSubFundo_1.filters = [cmf];
				cloneMeio_1.filters = [cmf];
				
				cameraSelf_1.addChildAt(cloneFundo_1, 0);
				cameraSelf_1.addChildAt(cloneSubFundo_1, 1);
				cameraSelf_1.addChildAt(cloneMeio_1, 2);
				cameraSelf_1.addChild(mascara);
				cameraSelf_1.mask = mascara;
				camera.addChildAt(cameraSelf_1,7);
			}
			
			if(pos == 0 && indice == 1)
			{
				cloneFundo_2.x = 0;
				cloneFundo_2.y = -1300;
				cloneSubFundo_2.x = 0;
				cloneSubFundo_2.y = 1550;
				cloneMeio_2.x = 0;
				cloneMeio_2.y = 1850;
				
				cloneFundo_2.filters = [cmf];
				cloneSubFundo_2.filters = [cmf];
				cloneMeio_2.filters = [cmf];
				
				cameraSelf_2.addChildAt(cloneFundo_2, 0);
				cameraSelf_2.addChildAt(cloneSubFundo_2, 1);
				cameraSelf_2.addChildAt(cloneMeio_2, 2);
				cameraSelf_2.addChild(mascara);
				cameraSelf_2.mask = mascara;
				camera.addChildAt(cameraSelf_2, 7);
			}
			if(pos == 1 && indice == 1)
			{
				cloneFundo_2.x = 0;
				cloneFundo_2.y = -1300;
				cloneSubFundo_2.x = 0;
				cloneSubFundo_2.y = 1550;
				cloneMeio_2.x = 0;
				cloneMeio_2.y = 1850;
				
				cloneFundo_2.filters = [cmf];
				cloneSubFundo_2.filters = [cmf];
				cloneMeio_2.filters = [cmf];
				
				cameraSelf_2.addChildAt(cloneFundo_2, 0);
				cameraSelf_2.addChildAt(cloneSubFundo_2, 1);
				cameraSelf_2.addChildAt(cloneMeio_2, 2);
				cameraSelf_2.addChild(mascara);
				cameraSelf_2.mask = mascara;
				camera.addChildAt(cameraSelf_2, 7);
			}
			
			if(pos == 0 && indice == 2)
			{
				cloneFundo_3.x = 0;
				cloneFundo_3.y = -1300;
				cloneSubFundo_3.x = 0;
				cloneSubFundo_3.y = 1550;
				cloneMeio_3.x = 0;
				cloneMeio_3.y = 1850;
				
				cloneFundo_3.filters = [cmf];
				cloneSubFundo_3.filters = [cmf];
				cloneMeio_3.filters = [cmf];
				
				cameraSelf_3.addChildAt(cloneFundo_3, 0);
				cameraSelf_3.addChildAt(cloneSubFundo_3, 1);
				cameraSelf_3.addChildAt(cloneMeio_3, 2);
				cameraSelf_3.addChild(mascara);
				cameraSelf_3.mask = mascara;
				camera.addChildAt(cameraSelf_3, 7);
			}
			if(pos == 1 && indice == 2)
			{
				cloneFundo_3.x = 620;
				cloneFundo_3.y = -1300;
				cloneSubFundo_3.x = 1240;
				cloneSubFundo_3.y = 1550;
				cloneMeio_3.x = -1860;
				cloneMeio_3.y = 1850;
				
				cloneFundo_3.filters = [cmf];
				cloneSubFundo_3.filters = [cmf];
				cloneMeio_3.filters = [cmf];
				
				cameraSelf_3.addChildAt(cloneFundo_3, 0);
				cameraSelf_3.addChildAt(cloneSubFundo_3, 1);
				cameraSelf_3.addChildAt(cloneMeio_3, 2);
				cameraSelf_3.addChild(mascara);
				cameraSelf_3.mask = mascara;
				camera.addChildAt(cameraSelf_3, 7);
			}
			if(pos == 0 && indice == 3)
			{
				cloneFundo_4.x = 0;
				cloneFundo_4.y = -1300;
				cloneSubFundo_4.x = 0;
				cloneSubFundo_4.y = 1550;
				cloneMeio_4.x = 0;
				cloneMeio_4.y = 1850;
				
				cloneFundo_4.filters = [cmf];
				cloneSubFundo_4.filters = [cmf];
				cloneMeio_4.filters = [cmf];
				
				cameraSelf_4.addChildAt(cloneFundo_4, 0);
				cameraSelf_4.addChildAt(cloneSubFundo_4, 1);
				cameraSelf_4.addChildAt(cloneMeio_4, 2);
				cameraSelf_4.addChild(mascara);
				cameraSelf_4.mask = mascara;
				camera.addChildAt(cameraSelf_4, 7);
			}
			if(pos == 1 && indice == 3)
			{
				cloneFundo_4.x = 620;
				cloneFundo_4.y = -1300;
				cloneSubFundo_4.x = 1240;
				cloneSubFundo_4.y = 1550;
				cloneMeio_4.x = -1860;
				cloneMeio_4.y = 1850;
				
				cloneFundo_4.filters = [cmf];
				cloneSubFundo_4.filters = [cmf];
				cloneMeio_4.filters = [cmf];
				
				cameraSelf_4.addChildAt(cloneFundo_4, 0);
				cameraSelf_4.addChildAt(cloneSubFundo_4, 1);
				cameraSelf_4.addChildAt(cloneMeio_4, 2);
				cameraSelf_4.addChild(mascara);
				cameraSelf_4.mask = mascara;
				camera.addChildAt(cameraSelf_4, 7);
			}
			if(pos == 0 && indice == 4)
			{
				cloneFundo_5.x = 0;
				cloneFundo_5.y = -1300;
				cloneSubFundo_5.x = 0;
				cloneSubFundo_5.y = 1550;
				cloneMeio_5.x = 0;
				cloneMeio_5.y = 1850;
				
				cloneFundo_5.filters = [cmf];
				cloneSubFundo_5.filters = [cmf];
				cloneMeio_5.filters = [cmf];
				
				cameraSelf_5.addChildAt(cloneFundo_5, 0);
				cameraSelf_5.addChildAt(cloneSubFundo_5, 1);
				cameraSelf_5.addChildAt(cloneMeio_5, 2);
				cameraSelf_5.addChild(mascara);
				cameraSelf_5.mask = mascara;
				camera.addChildAt(cameraSelf_5, 7);
			}
			if(pos == 1 && indice == 4)
			{
				cloneFundo_5.x = 620;
				cloneFundo_5.y = -1300;
				cloneSubFundo_5.x = 1240;
				cloneSubFundo_5.y = 1550;
				cloneMeio_5.x = -1860;
				cloneMeio_5.y = 1850;
				
				cloneFundo_5.filters = [cmf];
				cloneSubFundo_5.filters = [cmf];
				cloneMeio_5.filters = [cmf];
				
				cameraSelf_5.addChildAt(cloneFundo_5, 0);
				cameraSelf_5.addChildAt(cloneSubFundo_5, 1);
				cameraSelf_5.addChildAt(cloneMeio_5, 2);
				cameraSelf_5.addChild(mascara);
				cameraSelf_5.mask = mascara;
				camera.addChildAt(cameraSelf_5, 7);
			}
			if(pos == 0 && indice == 5)
			{
				cloneFundo_6.x = 0;
				cloneFundo_6.y = -1300;
				cloneSubFundo_6.x = 0;
				cloneSubFundo_6.y = 1550;
				cloneMeio_6.x = 0;
				cloneMeio_6.y = 1850;
				
				cloneFundo_6.filters = [cmf];
				cloneSubFundo_6.filters = [cmf];
				cloneMeio_6.filters = [cmf];
				
				cameraSelf_6.addChildAt(cloneFundo_6, 0);
				cameraSelf_6.addChildAt(cloneSubFundo_6, 1);
				cameraSelf_6.addChildAt(cloneMeio_6, 2);
				cameraSelf_6.addChild(mascara);
				cameraSelf_6.mask = mascara;
				camera.addChildAt(cameraSelf_6, 7);
			}
			if(pos == 1 && indice == 5)
			{
				cloneFundo_6.x = 620;
				cloneFundo_6.y = -1300;
				cloneSubFundo_6.x = 1240;
				cloneSubFundo_6.y = 1550;
				cloneMeio_6.x = -1860;
				cloneMeio_6.y = 1850;
				
				cloneFundo_6.filters = [cmf];
				cloneSubFundo_6.filters = [cmf];
				cloneMeio_6.filters = [cmf];
				
				cameraSelf_6.addChildAt(cloneFundo_6, 0);
				cameraSelf_6.addChildAt(cloneSubFundo_6, 1);
				cameraSelf_6.addChildAt(cloneMeio_6, 2);
				cameraSelf_6.addChild(mascara);
				cameraSelf_6.mask = mascara;
				camera.addChildAt(cameraSelf_6, 7);
			}
			if(pos == 0 && indice == 6)
			{
				cloneFundo_7.x = 0;
				cloneFundo_7.y = -1300;
				cloneSubFundo_7.x = 0;
				cloneSubFundo_7.y = 1550;
				cloneMeio_7.x = 0;
				cloneMeio_7.y = 1850;
				
				cloneFundo_7.filters = [cmf];
				cloneSubFundo_7.filters = [cmf];
				cloneMeio_7.filters = [cmf];
				
				cameraSelf_7.addChildAt(cloneFundo_7, 0);
				cameraSelf_7.addChildAt(cloneSubFundo_7, 1);
				cameraSelf_7.addChildAt(cloneMeio_7, 2);
				cameraSelf_7.addChild(mascara);
				cameraSelf_7.mask = mascara;
				camera.addChildAt(cameraSelf_7, 7);
			}
			if(pos == 1 && indice == 6)
			{
				cloneFundo_7.x = 620;
				cloneFundo_7.y = -1300;
				cloneSubFundo_7.x = 1240;
				cloneSubFundo_7.y = 1550;
				cloneMeio_7.x = -1860;
				cloneMeio_7.y = 1850;
				
				cloneFundo_7.filters = [cmf];
				cloneSubFundo_7.filters = [cmf];
				cloneMeio_7.filters = [cmf];
				
				cameraSelf_7.addChildAt(cloneFundo_7, 0);
				cameraSelf_7.addChildAt(cloneSubFundo_7, 1);
				cameraSelf_7.addChildAt(cloneMeio_7, 2);
				cameraSelf_7.addChild(mascara);
				cameraSelf_7.mask = mascara;
				camera.addChildAt(cameraSelf_7, 7);
			}
			if(pos == 0 && indice == 7)
			{
				cloneFundo_8.x = 0;
				cloneFundo_8.y = -1300;
				cloneSubFundo_8.x = 0;
				cloneSubFundo_8.y = 1550;
				cloneMeio_8.x = 0;
				cloneMeio_8.y = 1850;
				
				cloneFundo_8.filters = [cmf];
				cloneSubFundo_8.filters = [cmf];
				cloneMeio_8.filters = [cmf];
				
				cameraSelf_8.addChildAt(cloneFundo_8, 0);
				cameraSelf_8.addChildAt(cloneSubFundo_8, 1);
				cameraSelf_8.addChildAt(cloneMeio_8, 2);
				cameraSelf_8.addChild(mascara);
				cameraSelf_8.mask = mascara;
				camera.addChildAt(cameraSelf_8, 7);
			}
			if(pos == 1 && indice == 7)
			{
				cloneFundo_8.x = 620;
				cloneFundo_8.y = -1300;
				cloneSubFundo_8.x = 1240;
				cloneSubFundo_8.y = 1550;
				cloneMeio_8.x = -1860;
				cloneMeio_8.y = 1850;
				
				cloneFundo_8.filters = [cmf];
				cloneSubFundo_8.filters = [cmf];
				cloneMeio_8.filters = [cmf];
				
				cameraSelf_8.addChildAt(cloneFundo_8, 0);
				cameraSelf_8.addChildAt(cloneSubFundo_8, 1);
				cameraSelf_8.addChildAt(cloneMeio_8, 2);
				cameraSelf_8.addChild(mascara);
				cameraSelf_8.mask = mascara;
				camera.addChildAt(cameraSelf_8, 7);
			}
		}
		public function atualizaTempoAtk(event:TimerEvent):void 
		{
			if(VariaveisLocais.pausarJogo == false)
			{
			duracaoEfeitoAtk --;
			EfeitoPorcentagem = tempoEf / tempoMaxEf;
			barraDeEfeito.corBarEf.scaleX = EfeitoPorcentagem;
			tempoEf -= duracaoEfeitoAtk;
			if(duracaoEfeitoAtk < 1)
			{
				for (var cF:int = circEfeito.length - 1; cF >= 0; cF--)
				{
					barraDeEfeito.corBarEf.scaleX = 0;
					tempoEf = tempoMaxEf;
					camera.removeChild(circEfeito[cF]);
					circEfeito.splice(cF, 1);
					duracaoEfeitoAtk = 10;
					tempoEfeitoAtk.removeEventListener(TimerEvent.TIMER, atualizaTempoAtk);
					cont8 = 0;
					ataqueLaura = false;
					addEfeitoCirculo = false;
				}
			}
			}
		}
		public function atualizaTempo(event:TimerEvent):void 
		{
			if(VariaveisLocais.pausarJogo == false)
			{
			if (segundos < 1) 
			{
				minutos--;
				segundos = 60;
				segundos--;
			} 
			else 
			{
				segundos--;
			}
			minutos < 10 ? m = String(0) + String(minutos) : m = String(minutos);
			segundos < 10 ? s = String(0) + String(segundos) : s = String(segundos);
			if ((segundos < 1) && (minutos == 0)) 
			{
				tempo.removeEventListener(TimerEvent.TIMER, atualizaTempo);
				caixaTextoTime.textColor = 0xFF0000;
				mascara.gotoAndPlay(2);
				diario.gotoAndStop(1);
				diario.buttonMode = false;
				diario.removeEventListener(MouseEvent.CLICK, cliqueNoBotao);
							//1
							fundo_1.alpha = 0;
							subFundo_1.alpha = 0;
							meio_1.alpha = 0;
							
							//2
							fundo_2.alpha = 0;
							subFundo_2.alpha = 0;
							meio_2.alpha = 0;
							
							//3
							fundo_3.alpha = 0;
							subFundo_3.alpha = 0;
							meio_3.alpha = 0;
							
							//4
							fundo_4.alpha = 0;
							subFundo_4.alpha = 0;
							meio_4.alpha = 0;
							
							
							//5
							fundo_5.alpha = 0;
							subFundo_5.alpha = 0;
							meio_5.alpha = 0;
							
							//6
							fundo_6.alpha = 0;
							subFundo_6.alpha = 0;
							meio_6.alpha = 0;
							
							
							//7
							fundo_7.alpha = 0;
							subFundo_7.alpha = 0;
							meio_7.alpha = 0;
							
							//8
							fundo_8.alpha = 0;
							subFundo_8.alpha = 0;
							meio_8.alpha = 0;
							

				VariaveisLocais.timeOver = true;
				VariaveisLocais.timeLoser = false;
				danoMaxOn = true;
			} 
			if ((segundos == 15)) 
			{
				if(VariaveisLocais.abrirDiario)
				{
					diario.addEventListener(MouseEvent.CLICK, cliqueNoBotao, false, 0, true);
					diario.buttonMode = true;
					diario.gotoAndStop(2);
				}
			} 
			
			caixaTextoTime.text = m + ":" + s;
			}
		}
		public function iniciarRelogio(min:int, seg:int):void 
		{
			minutos = min;
			segundos = seg;
			tempo.start();
		}
 		public function carregarCenario(indice:int, pos:int):void
		{
			if(pos == 0 && indice == 0)
			{
				meio_1.y = 1850;
				meio_1.x = 0;
				camera.addChildAt(meio_1,4);

				fundo_1.y = -200;
				fundo_1.x = 0;
				camera.addChildAt(fundo_1,2);

				subFundo_1.y = -200;
				subFundo_1.x = 0;
				camera.addChildAt(subFundo_1,3);
				falsoSelf(0, 0);
			}
			if(pos == 1 && indice == 0)
			{
				meio_1.y = 1850;
				meio_1.x = 0;
				camera.addChildAt(meio_1,4);

				fundo_1.y = -200;
				fundo_1.x = 0;
				camera.addChildAt(fundo_1,2);

				subFundo_1.y = -200;
				subFundo_1.x = 0;
				camera.addChildAt(subFundo_1,3);
				falsoSelf(0, 1);
			}
			
			if(pos == 0 && indice == 1)
			{
				meio_2.y = 1850;
				meio_2.x = 0;
				camera.addChildAt(meio_2,4);

				fundo_2.y = -1300;
				fundo_2.x = 0;
				camera.addChildAt(fundo_2,2);

				subFundo_2.y = 1550;
				subFundo_2.x = 0;
				camera.addChildAt(subFundo_2,3);
				falsoSelf(1, 0);
			}
			if(pos == 1 && indice == 1)
			{
				meio_2.y = 1850;
				meio_2.x = -1860;
				camera.addChildAt(meio_2,4);

				fundo_2.y = -1300;
				fundo_2.x = 620;
				camera.addChildAt(fundo_2,2);

				subFundo_2.y = 1550;
				subFundo_2.x = 1240;
				camera.addChildAt(subFundo_2,3);
				falsoSelf(1, 1);
			}
			if(pos == 0 && indice == 2)
			{
				meio_3.y = 1850;
				meio_3.x = 0;
				camera.addChildAt(meio_3,4);

				fundo_3.y = -1300;
				fundo_3.x = 0;
				camera.addChildAt(fundo_3,2);

				subFundo_3.y = 1550;
				subFundo_3.x = 0;
				camera.addChildAt(subFundo_3,3);
				falsoSelf(2, 0);
			}
			if(pos == 1 && indice == 2)
			{
				meio_3.y = 1850;
				meio_3.x = -1860;
				camera.addChildAt(meio_3,4);

				fundo_3.y = -1300;
				fundo_3.x = 620;
				camera.addChildAt(fundo_3,2);

				subFundo_3.y = 1550;
				subFundo_3.x = 1240;
				camera.addChildAt(subFundo_3,3);
				falsoSelf(2, 1);
			}
			if(pos == 0 && indice == 3)
			{
				meio_4.y = 1850;
				meio_4.x = 0;
				camera.addChildAt(meio_4,4);

				fundo_4.y = -1300;
				fundo_4.x = 0;
				camera.addChildAt(fundo_4,2);

				subFundo_4.y = 1550;
				subFundo_4.x = 0;
				camera.addChildAt(subFundo_4,3);
				falsoSelf(3, 0);
			}
			if(pos == 1 && indice == 3)
			{
				meio_4.y = 1850;
				meio_4.x = -1860;
				camera.addChildAt(meio_4,4);

				fundo_4.y = -1300;
				fundo_4.x = 620;
				camera.addChildAt(fundo_4,2);

				subFundo_4.y = 1550;
				subFundo_4.x = 1240;
				camera.addChildAt(subFundo_4,3);
				falsoSelf(3, 1);
			}
			if(pos == 0 && indice == 4)
			{
				meio_5.y = 1850;
				meio_5.x = 0;
				camera.addChildAt(meio_5,4);

				fundo_5.y = -1300;
				fundo_5.x = 0;
				camera.addChildAt(fundo_5,2);

				subFundo_5.y = 1550;
				subFundo_5.x = 0;
				camera.addChildAt(subFundo_5,3);
				falsoSelf(4, 0);
			}
			if(pos == 1 && indice == 4)
			{
				meio_5.y = 1850;
				meio_5.x = -1860;
				camera.addChildAt(meio_5,4);

				fundo_5.y = -1300;
				fundo_5.x = 620;
				camera.addChildAt(fundo_5,2);

				subFundo_5.y = 1550;
				subFundo_5.x = 1240;
				camera.addChildAt(subFundo_5,3);
				falsoSelf(4, 1);
			}
			if(pos == 0 && indice == 5)
			{
				meio_6.y = 1850;
				meio_6.x = 0;
				camera.addChildAt(meio_6,4);

				fundo_6.y = -1300;
				fundo_6.x = 0;
				camera.addChildAt(fundo_6,2);

				subFundo_6.y = 1550;
				subFundo_6.x = 0;
				camera.addChildAt(subFundo_6,3);
				falsoSelf(5, 0);
			}
			if(pos == 1 && indice == 5)
			{
				meio_6.y = 1850;
				meio_6.x = -1860;
				camera.addChildAt(meio_6,4);

				fundo_6.y = -1300;
				fundo_6.x = 620;
				camera.addChildAt(fundo_6,2);

				subFundo_6.y = 1550;
				subFundo_6.x = 1240;
				camera.addChildAt(subFundo_6,3);
				falsoSelf(5, 1);
			}
			if(pos == 0 && indice == 6)
			{
				meio_7.y = 1850;
				meio_7.x = 0;
				camera.addChildAt(meio_7,4);

				fundo_7.y = -1300;
				fundo_7.x = 0;
				camera.addChildAt(fundo_7,2);

				subFundo_7.y = 1550;
				subFundo_7.x = 0;
				camera.addChildAt(subFundo_7,3);
				falsoSelf(6, 0);
			}
			if(pos == 1 && indice == 6)
			{
				meio_7.y = 1850;
				meio_7.x = -1860;
				camera.addChildAt(meio_7,4);

				fundo_7.y = -1300;
				fundo_7.x = 620;
				camera.addChildAt(fundo_7,2);

				subFundo_7.y = 1550;
				subFundo_7.x = 1240;
				camera.addChildAt(subFundo_7,3);
				falsoSelf(6, 1);
			}
			if(pos == 0 && indice == 7)
			{
				meio_8.y = 1850;
				meio_8.x = 0;
				camera.addChildAt(meio_8,4);

				fundo_8.y = -1300;
				fundo_8.x = 0;
				camera.addChildAt(fundo_8,2);

				subFundo_8.y = 1550;
				subFundo_8.x = 0;
				camera.addChildAt(subFundo_8,3);
				falsoSelf(7, 0);
			}
			if(pos == 1 && indice == 7)
			{
				meio_8.y = 1850;
				meio_8.x = -1860;
				camera.addChildAt(meio_8,4);

				fundo_8.y = -1300;
				fundo_8.x = 620;
				camera.addChildAt(fundo_8,2);

				subFundo_8.y = 1550;
				subFundo_8.x = 1240;
				camera.addChildAt(subFundo_8,3);
				falsoSelf(7, 1);
			}
		}
		public function criarParticulas(num:int, xPos:int, yPos:int, xVelocidade:int, yVelocidade:int, variacao:int, gravidade:int, cor:uint, tamanho:int, tempo:int = 10)
		{
			for(var i:int = 0; i < num; i++)
			{
				var part:Particulas = new Particulas(Math.round(Math.random()) * tamanho + 5, gravidade, cor, tempo);
				part.x = xPos;
				part.y = yPos;
				part.xVelocidade = xVelocidade + Math.random() * variacao - variacao/2;
				part.yVelocidade = yVelocidade + Math.random() * variacao - variacao/2;
				part.rVelocidade = Math.random() * 10 + 20;
				camera.addChild(part);
				particulas.push(part);
			}
			
		}

		public function animacoesPersonagem():void
		{
			
			if((direitaPress)&&(!wPress)&&(laura.pular))
			{
				laura.gotoAndStop(2);
				laura.scaleX = 1;
			}
			else if((esquerdaPress)&&(!wPress)&&(laura.pular))
			{
				laura.gotoAndStop(2);
				laura.scaleX = -1;
			}
			else if((!direitaPress)&&(cont2 == 2)&&(laura.pular))
			{
				cont3 = 2;
				laura.gotoAndStop(1);
				laura.scaleX = 1;
			}
			else if((!esquerdaPress)&&(cont2 == 1)&&(laura.pular))
			{
				cont3 = 1;
				laura.gotoAndStop(1);
				laura.scaleX = -1;
			}
			else if((direitaPress)&&(!laura.pular))
			{
				laura.gotoAndStop(3);
				laura.scaleX = 1;
			}
			else if((esquerdaPress)&&(!laura.pular))
			{
				laura.gotoAndStop(3);
				laura.scaleX = -1;
			} 
		}
		public function carregarMapas(indice:int, controleDeMapa:int)
		{
			
			if (camera.numChildren > 1)
			{
				while (camera.numChildren > 0)
				{
					camera.removeChildAt(0);
				}

			}
			if(barraDeEfeito.corBarEf.scaleX != 0 && cont8 == 1)
			{
				camera.addChild(efeitoCirculo);
			}
			
			if (controleDeMapa != -1)
			{
				
				var newArr:Array = [];
				for (var g:int = 0; g < mapa[controleDeMapa].length; g++)
				{
					newArr.push([]);
				}
				for (var s:int = 0; s < mapa[controleDeMapa].length; s++)
				{
					for (var h:int = 0; h < mapa[controleDeMapa][0].length; h++)
					{
						newArr[s].push(0);
					}
				}
				for (var q:int = 0; q < empurrarCaixas.length; q++)
				{
					newArr[Math.round((empurrarCaixas[q].y - 50) / 100)][Math.round((empurrarCaixas[q].x - 50) / 100)] = 9;
				}
				for (var b:int = 0; b < blocos.length; b++)
				{
					newArr[(blocos[b].y - 50) / 100][(blocos[b].x - 50) / 100] = 1;
				}
				for (var c:int = 0; c < moedas.length; c++)
				{
					newArr[(moedas[c].y - 50) / 100][(moedas[c].x - 50) / 100] = 2;
				}
	
				for (var n:int = 0; n < nuvens.length; n++)
				{
					if (!nuvens[n].mover)
					{
						newArr[(nuvens[n].y - 50) / 100][(nuvens[n].x - 50) / 100] = 7;
					}
					else
					{
						newArr[(nuvens[n].yIni - 50) / 100][(nuvens[n].xIni - 50) / 100] = 7;
					}
				}
				for (var bor:int = 0; bor < posicaoBorboleta.length; bor++)
				{
					newArr[(posicaoBorboleta[bor].y - 50) / 100][(posicaoBorboleta[bor].x - 50) / 100] = 5;
				}
				for (var n1:int = 0; n1 < posicaoInimigo_lvl1.length; n1++)
				{
					newArr[(posicaoInimigo_lvl1[n1].y - 50) / 100][(posicaoInimigo_lvl1[n1].x - 50) / 100] = 10;
				}
				for (var n5:int = 0; n5 < posicaoInimigo_lvl2.length; n5++)
				{
					newArr[(posicaoInimigo_lvl2[n5].y - 50) / 100][(posicaoInimigo_lvl2[n5].x - 50) / 100] = 11;
				}
				for (var n6:int = 0; n6 < posicaoInimigo_lvl3.length; n6++)
				{
					newArr[(posicaoInimigo_lvl3[n6].y - 50) / 100][(posicaoInimigo_lvl3[n6].x - 50) / 100] = 12;
				}
				for (var n7:int = 0; n7 < posicaoInimigo_lvl4.length; n7++)
				{
					newArr[(posicaoInimigo_lvl4[n7].y - 50) / 100][(posicaoInimigo_lvl4[n7].x - 50) / 100] = 13;
				}
				for (var n8:int = 0; n8 < posicaoInimigo_lvl5.length; n8++)
				{
					newArr[(posicaoInimigo_lvl5[n8].y - 50) / 100][(posicaoInimigo_lvl5[n8].x - 50) / 100] = 14;
				}
				
				for (var p:int = 0; p < portas.length; p++)
				{
					newArr[(portas[p].y - 50) / 100][(portas[p].x - 50) / 100] = 8;
				}
				mapa[controleDeMapa] = newArr;

				newArr = [];
				for (var g2:int = 0; g2 < mapa[controleDeMapa].length; g2++)
				{
					newArr.push([]);
				}
				for (var s2:int = 0; s2 < mapa[controleDeMapa].length; s2++)
				{
					for (var h2:int = 0; h2 < mapa[controleDeMapa][0].length; h2++)
					{
						newArr[s2].push(0);
					}
				}
				for (var k:int = 0; k < empurrarCaixas.length; k++)
				{
					newArr[Math.round((empurrarCaixas[k].y - 50) / 100)][Math.round((empurrarCaixas[k].x - 50) / 100)] = 9;
				}
				for (var b2:int = 0; b2 < blocos.length; b2++)
				{
					newArr[(blocos[b2].y - 50) / 100][(blocos[b2].x - 50) / 100] = 1;
				}
				for (var c2:int = 0; c2 < moedas.length; c2++)
				{
					newArr[(moedas[c2].y - 50) / 100][(moedas[c2].x - 50) / 100] = 2;
				}
				for (var bor2:int = 0; bor2 < posicaoBorboleta.length; bor2++)
				{
					newArr[(posicaoBorboleta[bor2].y - 50) / 100][(posicaoBorboleta[bor2].x - 50) / 100] = 5;
				}
				for (var n4:int = 0; n4 < posicaoInimigo_lvl1.length; n4++)
				{
					newArr[(posicaoInimigo_lvl1[n4].y - 50) / 100][(posicaoInimigo_lvl1[n4].x - 50) / 100] = 10;
				}
				for (var n9:int = 0; n9 < posicaoInimigo_lvl2.length; n9++)
				{
					newArr[(posicaoInimigo_lvl2[n9].y - 50) / 100][(posicaoInimigo_lvl2[n9].x - 50) / 100] = 11;
				}
				for (var n10:int = 0; n10 < posicaoInimigo_lvl3.length; n10++)
				{
					newArr[(posicaoInimigo_lvl3[n10].y - 50) / 100][(posicaoInimigo_lvl3[n10].x - 50) / 100] = 12;
				}
				for (var n11:int = 0; n11 < posicaoInimigo_lvl4.length; n11++)
				{
					newArr[(posicaoInimigo_lvl4[n11].y - 50) / 100][(posicaoInimigo_lvl4[n11].x - 50) / 100] = 13;
				}
				for (var n12:int = 0; n12 < posicaoInimigo_lvl5.length; n12++)
				{
					newArr[(posicaoInimigo_lvl5[n12].y - 50) / 100][(posicaoInimigo_lvl5[n12].x - 50) / 100] = 14;
				}
				for (var n2:int = 0; n2 < nuvens.length; n2++)
				{
					if (!nuvens[n2].mover)
					{
						newArr[(nuvens[n2].y - 50) / 100][(nuvens[n2].x - 50) / 100] = 7;
					}
					else
					{
						newArr[(nuvens[n2].yIni - 50) / 100][(nuvens[n2].xIni - 50) / 100] = [7,nuvens[n2].xVel,nuvens[n2].yVel,nuvens[n2].xDist,nuvens[n2].yDist];
					}
				}
				
				for (var p2:int = 0; p2 < portas.length; p2++)
				{
					newArr[(portas[p2].y - 50) / 100][(portas[p2].x - 50) / 100] = 8;
				}
				estiloMapa[controleDeMapa] = newArr;
			}
			blocos = [];
			moedas = [];
			circulos = [];
			empurrarCaixas = [];
			posicaoBorboleta = [];
			posicaoInimigo_lvl1 = [];
			inimigos_lvl1 = [];
			posicaoInimigo_lvl2 = [];
			inimigos_lvl2 = [];
			posicaoInimigo_lvl3 = [];
			inimigos_lvl3 = [];
			posicaoInimigo_lvl4 = [];
			inimigos_lvl4 = [];
			posicaoInimigo_lvl5 = [];
			inimigos_lvl5 = [];
			portas = [];
			nuvens = [];
			//circEfeito = [];

			for (var i:int = 0; i < mapa[indice].length; i++)
			{
				for (var j:int = 0; j < mapa[indice][0].length; j++)
				{
					if (mapa[indice][i][j] == 9)
					{
						var empCaixa:empurrarObj = new empurrarObj();
						empCaixa.x = j * 100 + 50;
						empCaixa.y = i * 100 + 50;
						camera.addChild(empCaixa);
						empurrarCaixas.push(empCaixa);
					}
					
					if (mapa[indice][i][j] == 7)
					{
						var nuvem:Nuvem = new Nuvem();
						nuvem.x = j * 100 + 50;
						nuvem.y = i * 100 + 50;
						nuvem.gotoAndStop(Math.floor(Math.random()*(1+7-1))+1);
						if (getQualifiedClassName(estiloMapa[indice][i][j]) == "Array")
						{
							if (estiloMapa[indice][i][j].length == 5)
							{
								nuvem.xVel = estiloMapa[indice][i][j][1];
								nuvem.yVel = estiloMapa[indice][i][j][2];
								nuvem.xDist = estiloMapa[indice][i][j][3];
								nuvem.yDist = estiloMapa[indice][i][j][4];
								nuvem.xIni = nuvem.x;
								nuvem.yIni = nuvem.y;
								nuvem.mover = true;

							}
						}
						nuvens.push(nuvem);
						camera.addChild(nuvem);

					}
					if (mapa[indice][i][j] == 2)
					{
						var moeda:Moedas = new Moedas();
						moeda.x = j * 100 + 50;
						moeda.y = i * 100 + 50;
						moedas.push(moeda);
						camera.addChild(moeda);
					}
					if (mapa[indice][i][j] == 5)
					{
						var circuloAtk:CirculoAtkItem = new CirculoAtkItem();
						circuloAtk.x = j * 100 + 50;
						circuloAtk.y = i * 100 + 50;
						circulos.push(circuloAtk);
						camera.addChild(circuloAtk);
						if(circulos.length == 1)
						{
							circuloAtk.addPontos(200, 200,  800, 200,  2200, 600, 3200, 200,  4000, 200, 4500, 200);
						}
						else if(circulos.length == 2)
						{
							circuloAtk.addPontos(200, 200,  100, 1900,  3200, 500,  4000, 1500,  1000, 1200, 500, 1500);
						}
						
					}
					if (mapa[indice][i][j] == 5)
					{
						var posBorboleta:PosicaoBorboleta = new PosicaoBorboleta();
						posBorboleta.x = j * 100 + 50;
						posBorboleta.y = i * 100 + 50;
						posicaoBorboleta.push(posBorboleta);
						camera.addChild(posBorboleta);
					}
					if (mapa[indice][i][j] == 10)
					{
						var posInimigo_1:PosicaoInimigo_lvl1 = new PosicaoInimigo_lvl1();
						posInimigo_1.x = j * 100 + 50;
						posInimigo_1.y = i * 100 + 50;
						posicaoInimigo_lvl1.push(posInimigo_1);
						camera.addChild(posInimigo_1);
					}
					if (mapa[indice][i][j] == 10)
					{
						var inimigo_1:Inimigo_lvl1 = new Inimigo_lvl1();
						inimigo_1.x = j * 100 + 50;
						inimigo_1.y = i * 100 + 50;
						inimigos_lvl1.push(inimigo_1);
						camera.addChild(inimigo_1);
						
						if(inimigos_lvl1.length == 1)
						{
							inimigo_1.addPontos(2900, 1000, 2000, 800, 3500, 800, 2200, 600, 2900, 800, 2500, 1100);
						}
						else if(inimigos_lvl1.length == 2)
						{
							inimigo_1.addPontos(4800, 1900, 4600, 1900, 4400, 1900, 4200, 1900, 3900, 1900, 3500, 1900);
						}
						else if(inimigos_lvl1.length == 3)
						{
							inimigo_1.addPontos(4300, 700, 4100, 200, 3000, 1900, 3600, 800, 200, 1900, 4400, 200);
						}
						else if(inimigos_lvl1.length == 4)
						{
							inimigo_1.addPontos(1200, 1400, 1300, 1200, 1400, 1500, 1500, 1000, 1200, 1800, 1400, 1000);
						}
						if(inimigos_lvl1.length == 5)
						{
							inimigo_1.addPontos(400, 400, 600, 300, 700, 500, 800, 600, 1000, 500, 200, 300);
						}
						else if(inimigos_lvl1.length == 6)
						{
							inimigo_1.addPontos(4800, 1900, 4600, 1900, 4400, 1900, 4200, 1900, 3900, 1900, 3500, 1900);
						}
						else if(inimigos_lvl1.length == 7)
						{
							inimigo_1.addPontos(4800, 1700, 4800, 1600, 4800, 1400, 4800, 1300, 4800, 1200, 4800, 1100);
						}
						else if(inimigos_lvl1.length == 8)
						{
							inimigo_1.addPontos(1200, 1400, 1300, 1200, 1400, 1500, 1500, 1000, 1200, 1800, 1400, 1000);
						}
						
						/*for (var iz:int = 0; iz < inimigo_1.localPoints.length; iz++)
						{
							var tempMarker:Marcador = new Marcador();
				
							tempMarker.x =  inimigo_1.localPoints[iz].x;
							tempMarker.y =  inimigo_1.localPoints[iz].y;
				
							camera.addChild(tempMarker);
						}*/
						
						
					}
					
					if (mapa[indice][i][j] == 11)
					{
						var posInimigo_2:PosicaoInimigo_lvl2 = new PosicaoInimigo_lvl2();
						posInimigo_2.x = j * 100 + 50;
						posInimigo_2.y = i * 100 + 50;
						posicaoInimigo_lvl2.push(posInimigo_2);
						camera.addChild(posInimigo_2);
					}
					if (mapa[indice][i][j] == 11)
					{
						var inimigo_2:Inimigo_lvl2 = new Inimigo_lvl2();
						inimigo_2.x = j * 100 + 50;
						inimigo_2.y = i * 100 + 50;
						inimigos_lvl2.push(inimigo_2);
						camera.addChild(inimigo_2);
						
						if(inimigos_lvl2.length == 1)
						{
							inimigo_2.addPontos(2300, 400, 2500, 300, 2500, 500, 2600, 600, 2100, 500, 2500, 300);
						}
						else if(inimigos_lvl2.length == 2)
						{
							inimigo_2.addPontos(3800, 1900, 3600, 1900, 3400, 1700, 3200, 1500, 2900, 1900, 3800, 1200);
						}
						else if(inimigos_lvl2.length == 3)
						{
							inimigo_2.addPontos(4300, 700, 4100, 600, 3900, 700, 3600, 800, 3400, 1000, 3100, 700);
						}
						else if(inimigos_lvl2.length == 4)
						{
							inimigo_2.addPontos(1200, 1400, 1300, 1200, 1400, 1500, 1500, 1000, 1200, 1800, 1400, 1000);
						}
						
						/*for (var iz2:int = 0; iz2 < inimigo_2.localPoints.length; iz2++)
						{
							var tempMarker2:Marcador = new Marcador();
				
							tempMarker2.x =  inimigo_2.localPoints[iz2].x;
							tempMarker2.y =  inimigo_2.localPoints[iz2].y;
				
							camera.addChild(tempMarker2);
						}*/
					}
					if (mapa[indice][i][j] == 12)
					{
						var posInimigo_3:PosicaoInimigo_lvl3 = new PosicaoInimigo_lvl3();
						posInimigo_3.x = j * 100 + 50;
						posInimigo_3.y = i * 100 + 50;
						posicaoInimigo_lvl3.push(posInimigo_3);
						camera.addChild(posInimigo_3);
					}
					if (mapa[indice][i][j] == 12)
					{
						var inimigo_3:Inimigo_lvl3 = new Inimigo_lvl3();
						inimigo_3.x = j * 100 + 50;
						inimigo_3.y = i * 100 + 50;
						inimigos_lvl3.push(inimigo_3);
						camera.addChild(inimigo_3);
						
						if(inimigos_lvl3.length == 1)
						{
							inimigo_3.addPontos(400, 400, 600, 300, 700, 500, 800, 600, 1000, 500, 200, 300);
						}
						else if(inimigos_lvl3.length == 2)
						{
							inimigo_3.addPontos(4800, 1900, 4600, 1900, 4400, 1900, 4200, 1900, 3900, 1900, 3500, 1900);
						}
						else if(inimigos_lvl3.length == 3)
						{
							inimigo_3.addPontos(4800, 1700, 4800, 1600, 4800, 1400, 4800, 1300, 4800, 1200, 4800, 1100);
						}
						else if(inimigos_lvl3.length == 4)
						{
							inimigo_3.addPontos(1200, 1400, 1300, 1200, 1400, 1500, 1500, 1000, 1200, 1800, 1400, 1000);
						}
						
						/*for (var iz3:int = 0; iz3 < inimigo_3.localPoints.length; iz3++)
						{
							var tempMarker3:Marcador = new Marcador();
				
							tempMarker3.x =  inimigo_3.localPoints[iz3].x;
							tempMarker3.y =  inimigo_3.localPoints[iz3].y;
				
							camera.addChild(tempMarker3);
						}*/
					}
					
					if (mapa[indice][i][j] == 13)
					{
						var posInimigo_4:PosicaoInimigo_lvl4 = new PosicaoInimigo_lvl4();
						posInimigo_4.x = j * 100 + 50;
						posInimigo_4.y = i * 100 + 50;
						posicaoInimigo_lvl4.push(posInimigo_4);
						camera.addChild(posInimigo_4);
					}
					if (mapa[indice][i][j] == 13)
					{
						var inimigo_4:Inimigo_lvl4 = new Inimigo_lvl4();
						inimigo_4.x = j * 100 + 50;
						inimigo_4.y = i * 100 + 50;
						inimigos_lvl4.push(inimigo_4);
						camera.addChild(inimigo_4);
						
						if(inimigos_lvl4.length == 1)
						{
							inimigo_4.addPontos(2900, 1000, 2000, 800, 3500, 800, 2200, 600, 2900, 800, 2500, 1100);
						}
						else if(inimigos_lvl4.length == 2)
						{
							inimigo_4.addPontos(4800, 1900, 4600, 1900, 4400, 1900, 4200, 1900, 3900, 1900, 3500, 1900);
						}
						else if(inimigos_lvl4.length == 3)
						{
							inimigo_4.addPontos(4300, 700, 4100, 600, 3900, 700, 3600, 800, 3400, 1000, 3100, 700);
						}
						else if(inimigos_lvl4.length == 4)
						{
							inimigo_4.addPontos(1200, 1400, 1300, 1200, 1400, 1500, 1500, 1000, 1200, 1800, 1400, 1000);
						}
						/*for (var iz4:int = 0; iz4 < inimigo_4.localPoints.length; iz4++)
						{
							var tempMarker4:Marcador = new Marcador();
				
							tempMarker4.x =  inimigo_4.localPoints[iz4].x;
							tempMarker4.y =  inimigo_4.localPoints[iz4].y;
				
							camera.addChild(tempMarker4);
						}*/
					}
					
					if (mapa[indice][i][j] == 14)
					{
						var posInimigo_5:PosicaoInimigo_lvl5 = new PosicaoInimigo_lvl5();
						posInimigo_5.x = j * 100 + 50;
						posInimigo_5.y = i * 100 + 50;
						posicaoInimigo_lvl5.push(posInimigo_5);
						camera.addChild(posInimigo_5);
					}
					if (mapa[indice][i][j] == 14)
					{
						var inimigo_5:Inimigo_lvl5 = new Inimigo_lvl5();
						inimigo_5.x = j * 100 + 50;
						inimigo_5.y = i * 100 + 50;
						inimigos_lvl5.push(inimigo_5);
						camera.addChild(inimigo_5);
						
						if(inimigos_lvl5.length == 1)
						{
							inimigo_5.addPontos(2900, 1000, 2000, 800, 3500, 800, 2200, 600, 2900, 800, 2500, 1100);
						}
						else if(inimigos_lvl5.length == 2)
						{
							inimigo_5.addPontos(200, 1000, 1000, 1000, 2500, 500, 3000, 1000, 3600, 1800, 4400, 1000);
						}
						else if(inimigos_lvl5.length == 3)
						{
							inimigo_5.addPontos(4800, 1900, 4600, 1900, 4400, 1900, 4200, 1900, 3900, 1900, 3500, 1900);
						}
						else if(inimigos_lvl5.length == 4)
						{
							inimigo_5.addPontos(1200, 1400, 1300, 1200, 1400, 1500, 1500, 1000, 1200, 1800, 1400, 1000);
						}
						
						
						/*for (var iz5:int = 0; iz5 < inimigo_5.localPoints.length; iz5++)
						{
							var tempMarker5:Marcador = new Marcador();
				
							tempMarker5.x =  inimigo_5.localPoints[iz5].x;
							tempMarker5.y =  inimigo_5.localPoints[iz5].y;
				
							camera.addChild(tempMarker5);
						}*/
					}
					if (mapa[indice][i][j] == 1)
					{
						var bloco:Bloco = new Bloco();
						bloco.x = j * 100 + 50;
						bloco.y = i * 100 + 50;
						if (getQualifiedClassName(estiloMapa[indice][i][j]) == "Array")
						{
							
						if (estiloMapa[indice][i][j].length == 3)
							{
								bloco.addInterruptor(estiloMapa[indice][i][j][1], estiloMapa[indice][i][j][2]);

							}
							if (estiloMapa[indice][i][j].length == 2)
							{
								bloco.interruptor = true;
								bloco.indiceInterruptor = estiloMapa[indice][i][j][1];
							}
						}

						blocos.push(bloco);
						camera.addChildAt(bloco, 0);
					}
					if (mapa[indice][i][j] == 8)
					{
						var porta:Porta = new Porta();
						porta.x = j * 100 + 50;
						porta.y = i * 100 + 50;
						if(cont4 == 1)
						{
							if((indice == 0))
							{
								laura.x = posicaoLauraX2;
								laura.y = posicaoLauraY2;
								camera.y = posPadraoCamY2;
								camera.x = posPadraoCamX2;
								carregarCenario(0, 1);
							}
							else if((indice == 1) && (local == 1))
							{
								laura.x = posicaoLauraX2;
								laura.y = posicaoLauraY2;
								camera.y = posPadraoCamY2;
								camera.x = posPadraoCamX2;
								carregarCenario(1, 1);
							}
							else if((indice == 2) && (local == 2))
							{
								laura.x = posicaoLauraX2;
								laura.y = posicaoLauraY2;
								camera.y = posPadraoCamY2;
								camera.x = posPadraoCamX2;
								carregarCenario(2, 1);
							}
							else if((indice == 3) && (local == 3))
							{
								laura.x = posicaoLauraX2;
								laura.y = posicaoLauraY2;
								camera.y = posPadraoCamY2;
								camera.x = posPadraoCamX2;
								carregarCenario(3, 1);
							}
							else if((indice == 4) && (local == 4))
							{
								laura.x = posicaoLauraX2;
								laura.y = posicaoLauraY2;
								camera.y = posPadraoCamY2;
								camera.x = posPadraoCamX2;
								carregarCenario(4, 1);
							}
							else if((indice == 5) && (local == 5))
							{
								laura.x = posicaoLauraX2;
								laura.y = posicaoLauraY2;
								camera.y = posPadraoCamY2;
								camera.x = posPadraoCamX2;
								carregarCenario(5, 1);
							}
							else if((indice == 6) && (local == 6))
							{
								laura.x = posicaoLauraX2;
								laura.y = posicaoLauraY2;
								camera.y = posPadraoCamY2;
								camera.x = posPadraoCamX2;
								carregarCenario(6, 1);
							}
							
							else if((indice == 1))
							{
								laura.x = posicaoLauraX1;
								laura.y = posicaoLauraY1;
								camera.y = posPadraoCamY1;
								camera.x = posPadraoCamX1;
								carregarCenario(1, 0);
							}	
							else if((indice == 2))
							{
								laura.x = posicaoLauraX1;
								laura.y = posicaoLauraY1;
								camera.y = posPadraoCamY1;
								camera.x = posPadraoCamX1;
								carregarCenario(2, 0);
							}
							
							else if((indice == 3))
							{
								laura.x = posicaoLauraX1;
								laura.y = posicaoLauraY1;
								camera.y = posPadraoCamY1;
								camera.x = posPadraoCamX1;
								carregarCenario(3, 0);
							}
							else if((indice == 4))
							{
								laura.x = posicaoLauraX1;
								laura.y = posicaoLauraY1;
								camera.y = posPadraoCamY1;
								camera.x = posPadraoCamX1;
								carregarCenario(4, 0);
							}
							else if((indice == 5))
							{
								laura.x = posicaoLauraX1;
								laura.y = posicaoLauraY1;
								camera.y = posPadraoCamY1;
								camera.x = posPadraoCamX1;
								carregarCenario(5, 0);
							}
							else if((indice == 6))
							{
								laura.x = posicaoLauraX1;
								laura.y = posicaoLauraY1;
								camera.y = posPadraoCamY1;
								camera.x = posPadraoCamX1;
								carregarCenario(6, 0);
							}
							else if((indice == 7))
							{
								laura.x = posicaoLauraX1;
								laura.y = posicaoLauraY1;
								camera.y = posPadraoCamY1;
								camera.x = posPadraoCamX1;
								carregarCenario(7, 0);
							}
						}
						
							
						camera.addChild(porta);
						portas.push(porta);
					}

				}
			}
			camera.addChild(laura);
			indiceMapa = indice;
			padraoChao = laura.chao;
		}

		public function atualizar():void
		{
			if(VariaveisLocais.resetarJogo || VariaveisLocais.sairJogo || VariaveisLocais.fimDeJogo)
			{
				limpar();
			}
			
			var posX:int = laura.x;
			
			if(aPress && circuloAtk.buttonMode == true)
			{
				circAtk();
			}
			animacoesPersonagem();
			
			/*if(laura.controleBloco == 1)
			{
				laura.cameraControle = true;
				
			}
			else 
			{
				laura.cameraControle = false;
			}*/
			if(danoOn)
			{
				laura.danoPorcentagem = laura.vida / laura.vidaMax;
				barraDeVida.corBar.scaleX = laura.danoPorcentagem;
			}
			if(laura.vida < 1 && barraDeVida.corBar.scaleX < 0)
			{
				VariaveisLocais.fimDeJogo = true;
				danoOn = false;
				laura.vida = laura.vidaMax;
				barraDeVida.corBar.scaleX = 1;
			}
			
			/*if(VariaveisLocais.contDiario == true)
			{
				diario.buttonMode = false;
				diario.removeEventListener(MouseEvent.CLICK, cliqueNoBotao);
				cont7 = 0;
			}
			else
			{
				if(cont7 == 0)
				{
					diario.buttonMode = true;
					diario.addEventListener(MouseEvent.CLICK, cliqueNoBotao);
					cont7 = 1;
				}
			}*/
			

			for (var i:int = 0; i < blocos.length; i++)
			{
				blocos[i].checarObj(laura, i, padraoChao);
				
				for (var n:int = 0; n < empurrarCaixas.length; n++)
				{
					blocos[i].checarObj(empurrarCaixas[n], i);
				}
				
				if (blocos[i].interruptored)
				{
					for (var m:int = blocos.length-1; m >= 0; m--)
					{
						if (blocos[m].indiceInterruptor == blocos[i].indiceInterruptor && i != m)
						{
							camera.removeChild(blocos[m]);
							blocos.splice(m,1);
							blocos[i].indiceInterruptor = -1;
							if(laura.agarrar != 0)
							{
								laura.agarrar--;
							}
							blocos[i].interruptored = false;
							break;
						}
					}
				}
			}

			
			for (var o:int = 0; o < empurrarCaixas.length; o++)
			{
				
				empurrarCaixas[o].checarObj(laura, o + blocos.length + nuvens.length, padraoChao, qPress,  direitaPress, esquerdaPress, wPress);
			}
			
			for (var u:int = 0; u < nuvens.length; u++)
			{
				nuvens[u].checarObj(laura, u + blocos.length, padraoChao);
				
				if (nuvens[u].mover)
				{
					nuvens[u].ajustar(laura, u + blocos.length);
				}
				
			}
			for (var j:int = inimigos_lvl1.length -1; j >= 0; j--)
			{
				inimigos_lvl1[j].checarObj(laura, efeitoCirculo, j + inimigos_lvl1.length, padraoChao, danoOn, ataqueLaura, danoMaxOn);
				if(laura.particulas)
				{
					criarParticulas(20, laura.x, laura.y, 0, -15, 20, 1.5, 0,5,30);
					//num, xPos, yPos, xVelocidade, yVelocidade, variacao, gravidade, cor, tamanho, tempo
				}
				if (inimigos_lvl1[j].removerInimigo)
				{
					camera.removeChild(inimigos_lvl1[j]);
					inimigos_lvl1.splice(j, 1);
					
					camera.removeChild(posicaoInimigo_lvl1[j]);
					posicaoInimigo_lvl1.splice(j, 1);
				}
			}
			for (var j2:int = inimigos_lvl2.length -1; j2 >= 0; j2--)
			{
				inimigos_lvl2[j2].checarObj(laura, efeitoCirculo, j2 + inimigos_lvl2.length, padraoChao, danoOn, ataqueLaura, danoMaxOn);
				if(laura.particulas)
				{
					criarParticulas(20, laura.x, laura.y, 0, -15, 20, 1.5, 0xFFCC00,5,30);
					//num, xPos, yPos, xVelocidade, yVelocidade, variacao, gravidade, cor, tamanho, tempo
				}
				if (inimigos_lvl2[j2].removerInimigo)
				{
					camera.removeChild(inimigos_lvl2[j2]);
					inimigos_lvl2.splice(j2, 1);
					
					camera.removeChild(posicaoInimigo_lvl2[j2]);
					posicaoInimigo_lvl2.splice(j2, 1);
				}
			}
			for (var j3:int = inimigos_lvl3.length -1; j3 >= 0; j3--)
			{
				inimigos_lvl3[j3].checarObj(laura, efeitoCirculo, j3 + inimigos_lvl3.length, padraoChao, danoOn, ataqueLaura, danoMaxOn);
				if(laura.particulas)
				{
					criarParticulas(20, laura.x, laura.y, 0, -15, 20, 1.5, 0xFFFFFF,5,30);
					//num, xPos, yPos, xVelocidade, yVelocidade, variacao, gravidade, cor, tamanho, tempo
				}
				if (inimigos_lvl3[j3].removerInimigo)
				{
					camera.removeChild(inimigos_lvl3[j3]);
					inimigos_lvl3.splice(j3, 1);
					
					camera.removeChild(posicaoInimigo_lvl3[j3]);
					posicaoInimigo_lvl3.splice(j3, 1);
				}
			}
			for (var j4:int = inimigos_lvl4.length -1; j4 >= 0; j4--)
			{
				inimigos_lvl4[j4].checarObj(laura, efeitoCirculo, j4 + inimigos_lvl4.length, padraoChao, danoOn, ataqueLaura, danoMaxOn);
				if(laura.particulas)
				{
					criarParticulas(20, laura.x, laura.y, 0, -15, 20, 1.5, 0xD71F30,5,30);
					//num, xPos, yPos, xVelocidade, yVelocidade, variacao, gravidade, cor, tamanho, tempo
				}
				if (inimigos_lvl4[j4].removerInimigo)
				{
					camera.removeChild(inimigos_lvl4[j4]);
					inimigos_lvl4.splice(j4, 1);
					
					camera.removeChild(posicaoInimigo_lvl4[j4]);
					posicaoInimigo_lvl4.splice(j4, 1);
				}
			}
			for (var j5:int = inimigos_lvl5.length -1; j5 >= 0; j5--)
			{
				inimigos_lvl5[j5].checarObj(laura, efeitoCirculo, j5 + inimigos_lvl5.length, padraoChao, danoOn, ataqueLaura, danoMaxOn);
				if(laura.particulas)
				{
					criarParticulas(20, laura.x, laura.y, 0, -15, 20, 1.5, 0xFFFFFF,5,30);
					//num, xPos, yPos, xVelocidade, yVelocidade, variacao, gravidade, cor, tamanho, tempo
				}
				if (inimigos_lvl5[j5].removerInimigo)
				{
					camera.removeChild(inimigos_lvl5[j5]);
					inimigos_lvl5.splice(j5, 1);
					
					camera.removeChild(posicaoInimigo_lvl5[j5]);
					posicaoInimigo_lvl5.splice(j5, 1);
				}
			}
			this.plataformaAltura = mapa[0].length;
			this.plataformaLargura = mapa[0][0].length;
			//trace("laura Matriz Y = "+Math.round((((laura.y + alturaPersonagem) - 100 / 2) / 100)));
			//trace(" Indice = "+ indiceMapa+" Local = "+local);
			//trace("Camera X = "+camera.x);
			//trace("Camera Y = "+camera.y);
		
			
			if (camera.y < 800)
			{
				if ((Math.round((((laura.y + alturaPersonagem) - 100 / 2) / 100)) < 17) && (camera.y < -1000))
				{
						for (var cam:int = 0; cam <= velCamera; cam++)
						{
							camera.y +=  laura.velocidadeY;
						}
				}
				else if ((Math.round((((laura.y + alturaPersonagem) - 100 / 2) / 100)) < 14) && (camera.y < - 700))
				{
					for (var cam2:int = 0; cam2 <= velCamera; cam2++)
					{
						camera.y +=  laura.velocidadeY;
					}
				}
				else if ((Math.round((((laura.y + alturaPersonagem) - 100 / 2) / 100)) < 11) && (camera.y < -500))
				{
					for (var cam3:int = 0; cam3 <= velCamera; cam3++)
					{
						camera.y +=  laura.velocidadeY;
					}
				}
				else if ((Math.round((((laura.y + alturaPersonagem) - 100 / 2) / 100)) < 9) && (camera.y < -100))
				{
					for (var cam4:int = 0; cam4 <= velCamera; cam4++)
					{
						camera.y +=  laura.velocidadeY;
					}
				}
				else if ((Math.round((((laura.y + alturaPersonagem) - 100 / 2) / 100)) < 5) && (camera.y < 200))
				{
					for (var cam5:int = 0; cam5 <= velCamera; cam5++)
					{
						camera.y +=  laura.velocidadeY;
					}
				}
				else if ((Math.round((((laura.y + alturaPersonagem) - 100 / 2) / 100)) <  2) && (camera.y < 600))
				{
					for (var cam6:int = 0; cam6 <= velCamera; cam6++)
					{
						camera.y +=  laura.velocidadeY;
					}
				}
			}
			if (camera.y > -1200)
			{
				if ((Math.round((((laura.y + alturaPersonagem) - 100 / 2) / 100)) > 16) && (camera.y > - 1200))
				{
					for (var cam7:int = 0; cam7 <= velCamera2; cam7++)
					{
						camera.y -=  laura.velocidadeY;
					}
				}
				else if ((Math.round((((laura.y + alturaPersonagem) - 100 / 2) / 100)) > 13) && (camera.y > - 1000))
				{
					for (var cam8:int = 0; cam8 <= velCamera2; cam8++)
					{
						camera.y -=  laura.velocidadeY;
					}
				}
				else if ((Math.round((((laura.y + alturaPersonagem) - 100 / 2) / 100)) > 10) && (camera.y >  -650))
				{
					for (var cam9:int = 0; cam9 <= velCamera2; cam9++)
					{
						camera.y -=  laura.velocidadeY;
					}
				}
				else if ((Math.round((((laura.y + alturaPersonagem) - 100 / 2) / 100)) > 8) && (camera.y >  -300))
				{
					for (var cam10:int = 0; cam10 <= velCamera2; cam10++)
					{
						camera.y -=  laura.velocidadeY;
					}
				}
				else if ((Math.round((((laura.y + alturaPersonagem) - 100 / 2) / 100)) > 4) && (camera.y >  -100))
				{
					for (var cam11:int = 0; cam11 <= velCamera2; cam11++)
					{
						camera.y -=  laura.velocidadeY;
					}
				}
				else if ((Math.round((((laura.y + alturaPersonagem) - 100 / 2) / 100)) > 1) && (camera.y >  200))
				{
					for (var cam12:int = 0; cam12 <= velCamera2; cam12++)
					{
						camera.y -=  laura.velocidadeY;
					}
				}
			}
			

			if ((wPress) && (laura.pular))
			{
				if ((esquerdaPress))
				{
					laura.y -=  laura.velocidadeY;
					laura.gravidade = -20;
					laura.x -=  laura.velocidadeX;
				}
				else if((direitaPress))
				{
					laura.y -=  laura.velocidadeY;
					laura.gravidade = -20;
					laura.x +=  laura.velocidadeX;
				}
				else 
				{
					laura.y -=  laura.velocidadeY;
					laura.gravidade = -20;
				}
			}
			 
			laura.ajustar();

			for(var p:int = particulas.length-1; p >=0; p--)
				{
					particulas[p].atualizar();
					if(particulas[p].temp == 10)
					{
						camera.removeChild(particulas[p]);
						particulas.splice(p, 1);
					}
				}
			
			for (var a:int = moedas.length - 1; a >= 0; a--)
			{
				if (moedas[a].checarObj(laura) && (ePress))
				{
					if(VariaveisLocais.cont3 == false)
					{
						var caixaQuiz:CaixaQuestoes = new CaixaQuestoes();
						caixaQuiz.x = 1000;
						caixaQuiz.y = 500;
						addChild(caixaQuiz);
						questoes.push(caixaQuiz);
						VariaveisLocais.cont3 = true;
						VariaveisLocais.pausarJogo = true;
					}
				}
				
				if(VariaveisLocais.removeCaixa)
				{
					if(questoes[a] != null)
					{
						removeChild(questoes[a]);
						questoes.splice(a, 1);
						VariaveisLocais.removeCaixa = false;
					}
				}
			}
			for (var a2:int = circulos.length - 1; a2 >= 0; a2--)
			{
				if (circulos[a2].checarObj(laura))
				{
					barraDeEfeito.corBarEf.scaleX = 1;
					camera.removeChild(circulos[a2]);
					circulos.splice(a2, 1);
					
					camera.removeChild(posicaoBorboleta[a2]);
					posicaoBorboleta.splice(a2, 1);
					
					circuloAtk.gotoAndStop(2);
					circuloAtk.buttonMode = true;
					circuloAtk.addEventListener(MouseEvent.CLICK, cliqueNoBotaoCirculo, false, 0, true);
				}
			}
			if(VariaveisLocais.RecuarMascara)
			{
				mascara.gotoAndPlay(153);
				
							//1
							fundo_1.alpha = 1;
							subFundo_1.alpha = 1;
							meio_1.alpha = 1;
							
							//2
							fundo_2.alpha = 1;
							subFundo_2.alpha = 1;
							meio_2.alpha = 1;
							
							//3
							fundo_3.alpha = 1;
							subFundo_3.alpha = 1;
							meio_3.alpha = 1;
							
							//4
							fundo_4.alpha = 1;
							subFundo_4.alpha = 1;
							meio_4.alpha = 1;
							
							//5
							fundo_5.alpha = 1;
							subFundo_5.alpha = 1;
							meio_5.alpha = 1;
							
							//6
							fundo_6.alpha = 1;
							subFundo_6.alpha = 1;
							meio_6.alpha = 1;
							
							//7
							fundo_7.alpha = 1;
							subFundo_7.alpha = 1;
							meio_7.alpha = 1;
							
							//8
							fundo_8.alpha = 1;
							subFundo_8.alpha = 1;
							meio_8.alpha = 1;
							
				
				tempo.addEventListener(TimerEvent.TIMER, atualizaTempo, false, 0, true);
				caixaTextoTime.textColor = 0xFFFFFF;
				iniciarRelogio(0,30);
				VariaveisLocais.timeOver = false;
				danoMaxOn = false;
				VariaveisLocais.RecuarMascara = false;
			}
			if(VariaveisLocais.timeLoser)
			{
				tempo.addEventListener(TimerEvent.TIMER, atualizaTempo, false, 0, true);
				iniciarRelogio(0,30);
				VariaveisLocais.RecuarMascara = false;
				VariaveisLocais.timeOver = false;
				VariaveisLocais.timeLoser = false;
			}

			for (var d:int = 0; d < portas.length; d++)
			{
				if (portas[d].checarObj(laura))
				{
					cont4 =1;
					if((indiceMapa == 0) && (Math.round((((laura.x + larguraPersonagem) - 100 / 2) / 100)) > 45))
					{
						carregarMapas(1 , indiceMapa);
					}
					else if((indiceMapa == 1) && (Math.round((((laura.x + larguraPersonagem) - 100 / 2) / 100)) < 5))
					{
						carregarMapas(0 , indiceMapa);
					}
					else if((indiceMapa == 1) && (Math.round((((laura.x + larguraPersonagem) - 100 / 2) / 100)) > 45))
					{
						carregarMapas(2 , indiceMapa);
						local = 1;
					}
					else if((indiceMapa == 2) && (Math.round((((laura.x + larguraPersonagem) - 100 / 2) / 100)) < 5))
					{
						carregarMapas(1 , indiceMapa);
						local = 0
					}
					else if((indiceMapa == 2) && (Math.round((((laura.x + larguraPersonagem) - 100 / 2) / 100)) > 45))
					{
						carregarMapas(3 , indiceMapa);
						local = 2;
					}
					else if((indiceMapa == 3) && (Math.round((((laura.x + larguraPersonagem) - 100 / 2) / 100)) < 5))
					{
						carregarMapas(2 , indiceMapa);
						local = 1;
					}
					else if((indiceMapa == 3) && (Math.round((((laura.x + larguraPersonagem) - 100 / 2) / 100)) > 45))
					{
						carregarMapas(4 , indiceMapa);
						local = 3;
					}
					else if((indiceMapa == 4) && (Math.round((((laura.x + larguraPersonagem) - 100 / 2) / 100)) < 5))
					{
						carregarMapas(3 , indiceMapa);
						local = 2;
					}
					else if((indiceMapa == 4) && (Math.round((((laura.x + larguraPersonagem) - 100 / 2) / 100)) > 45))
					{
						carregarMapas(5 , indiceMapa);
						local = 4;
					}
					else if((indiceMapa == 5) && (Math.round((((laura.x + larguraPersonagem) - 100 / 2) / 100)) < 5))
					{
						carregarMapas(4 , indiceMapa);
						local = 3;
					}
					else if((indiceMapa == 5) && (Math.round((((laura.x + larguraPersonagem) - 100 / 2) / 100)) > 45))
					{
						carregarMapas(6 , indiceMapa);
						local = 5;
					}
					else if((indiceMapa == 6) && (Math.round((((laura.x + larguraPersonagem) - 100 / 2) / 100)) < 5))
					{
						carregarMapas(5 , indiceMapa);
						local = 4;
					}
					else if((indiceMapa == 6) && (Math.round((((laura.x + larguraPersonagem) - 100 / 2) / 100)) > 45))
					{
						VariaveisLocais.fimInsideme = true;
						limpar();
					}
				}
				
			}

			btn_Espaco = false;
			mascara.x = laura.x;
			mascara.y = laura.y;
			if(addEfeitoCirculo)
			{
				efeitoCirculo.x = laura.x;
				efeitoCirculo.y = laura.y;
			}
			
			else if(laura.gravidade != 0 && laura.x - posX == 0)
			{
				contE = 0;
				contD = 0;
			}
			
			if (esquerdaPress && !direitaPress)
			{
				laura.x -=  laura.velocidadeX;
				if (cameraMovE)
				{
					contD = 0;
					if (camera.x < -1)
					{
						if (Math.round((((laura.x + larguraPersonagem) - 100 / 2) / 100)) < 40)
						{
							
							if(laura.x - posX != 0 && contE == 0)
							{
							camera.x -=  laura.x - posX;
							if(laura.deslCamera == false)
							{
							//1
							fundo_1.x -= velFundo;
							subFundo_1.x -= velSubFundo;
							meio_1.x += velMeio;
							
							cloneFundo_1.x -= velFundo;
							cloneSubFundo_1.x -= velSubFundo;
							cloneMeio_1.x += velMeio;
							//2
							fundo_2.x -= velFundo;
							subFundo_2.x -= velSubFundo;
							meio_2.x += velMeio;
							
							cloneFundo_2.x -= velFundo;
							cloneSubFundo_2.x -= velSubFundo;
							cloneMeio_2.x += velMeio;
							//3
							fundo_3.x -= velFundo;
							subFundo_3.x -= velSubFundo;
							meio_3.x += velMeio;
							
							cloneFundo_3.x -= velFundo;
							cloneSubFundo_3.x -= velSubFundo;
							cloneMeio_3.x += velMeio;
							//4
							fundo_4.x -= velFundo;
							subFundo_4.x -= velSubFundo;
							meio_4.x += velMeio;
							
							cloneFundo_4.x -= velFundo;
							cloneSubFundo_4.x -= velSubFundo;
							cloneMeio_4.x += velMeio;
							//5
							fundo_5.x -= velFundo;
							subFundo_5.x -= velSubFundo;
							meio_5.x += velMeio;
							
							cloneFundo_5.x -= velFundo;
							cloneSubFundo_5.x -= velSubFundo;
							cloneMeio_5.x += velMeio;
							//6
							fundo_6.x -= velFundo;
							subFundo_6.x -= velSubFundo;
							meio_6.x += velMeio;
							
							cloneFundo_6.x -= velFundo;
							cloneSubFundo_6.x -= velSubFundo;
							cloneMeio_6.x += velMeio;
							//7
							fundo_7.x -= velFundo;
							subFundo_7.x -= velSubFundo;
							meio_7.x += velMeio;
							
							cloneFundo_7.x -= velFundo;
							cloneSubFundo_7.x -= velSubFundo;
							cloneMeio_7.x += velMeio;
							//8
							fundo_8.x -= velFundo;
							subFundo_8.x -= velSubFundo;
							meio_8.x += velMeio;
							
							cloneFundo_8.x -= velFundo;
							cloneSubFundo_8.x -= velSubFundo;
							cloneMeio_8.x += velMeio;
							}
							}
							else if(laura.x - posX == 0)
							{
								contE = 1;
							}
						}
					}
				}
			}
			if (direitaPress && !esquerdaPress)
			{
				laura.x +=  laura.velocidadeX;
				if (cameraMovD)
				{
					contE = 0;
					if (camera.x > -3100)
					{
						if (Math.round((((laura.x + larguraPersonagem) - 100 / 2) / 100)) > 10)
						{
							
							if(laura.x - posX != 0 && contD == 0)
							{
							camera.x -=  laura.x - posX;
							if(laura.deslCamera == false)
							{
							//1
							fundo_1.x += velFundo;
							subFundo_1.x += velSubFundo;
							meio_1.x -= velMeio;
							
							cloneFundo_1.x += velFundo;
							cloneSubFundo_1.x += velSubFundo;
							cloneMeio_1.x -= velMeio;
							//2
							fundo_2.x += velFundo;
							subFundo_2.x += velSubFundo;
							meio_2.x -= velMeio;
							
							cloneFundo_2.x += velFundo;
							cloneSubFundo_2.x += velSubFundo;
							cloneMeio_2.x -= velMeio;
							//3
							fundo_3.x += velFundo;
							subFundo_3.x += velSubFundo;
							meio_3.x -= velMeio;
							
							cloneFundo_3.x += velFundo;
							cloneSubFundo_3.x += velSubFundo;
							cloneMeio_3.x -= velMeio;
							//4
							fundo_4.x += velFundo;
							subFundo_4.x += velSubFundo;
							meio_4.x -= velMeio;
							
							cloneFundo_4.x += velFundo;
							cloneSubFundo_4.x += velSubFundo;
							cloneMeio_4.x -= velMeio;
							//5
							fundo_5.x += velFundo;
							subFundo_5.x += velSubFundo;
							meio_5.x -= velMeio;
							
							cloneFundo_5.x += velFundo;
							cloneSubFundo_5.x += velSubFundo;
							cloneMeio_5.x -= velMeio;
							//6
							fundo_6.x += velFundo;
							subFundo_6.x += velSubFundo;
							meio_6.x -= velMeio;
							
							cloneFundo_6.x += velFundo;
							cloneSubFundo_6.x += velSubFundo;
							cloneMeio_6.x -= velMeio;
							//7
							fundo_7.x += velFundo;
							subFundo_7.x += velSubFundo;
							meio_7.x -= velMeio;
							
							cloneFundo_7.x += velFundo;
							cloneSubFundo_7.x += velSubFundo;
							cloneMeio_7.x -= velMeio;
							//8
							fundo_8.x += velFundo;
							subFundo_8.x += velSubFundo;
							meio_8.x -= velMeio;
							
							cloneFundo_8.x += velFundo;
							cloneSubFundo_8.x += velSubFundo;
							cloneMeio_8.x -= velMeio;
							}
							}
							else if(laura.x - posX == 0)
							{
								contD = 1;
							}
						}
					}
				}
			}
		}
		public function apertarTecla(e:KeyboardEvent):void
		{
			if(VariaveisLocais.pausarJogo == false)
			{
			if((e.keyCode == 65))
			{
				aPress = true;
			}
			if ((e.keyCode == 69))
			{
				ePress = true;
			}
			if ((e.keyCode == 81))
			{
				qPress = true;
			}
			if ((e.keyCode == 37))
			{
				esquerdaPress = true;
				cameraMovE = true;
				wPress = false;
				direitaPress = false;
				cont2 = 1;
			}
			else if ((e.keyCode == 39))
			{
				cameraMovD = true;
				direitaPress = true;
				wPress = false;
				esquerdaPress = false;
				cont2 = 2;
			}
			if ((e.keyCode == 87 ))
			{
				cont++;;
				if (laura.pular)
				{
					wPress = true;
					cameraMovC = true;
				}
				if (cont > 1)
				{
					wPress = false;
				}
			}
			}
			
		}
		public function soltarTecla(e:KeyboardEvent):void
		{
			if((e.keyCode == 65))
			{
				aPress = false;
			}
			if ((e.keyCode == 81))
			{
				qPress = false;
			}
			if (e.keyCode == 69)
			{
				ePress = false;
			}
			if (e.keyCode == 37)
			{
				esquerdaPress = false;
				cameraMovE = false;
			}
			if (e.keyCode == 39)
			{
				direitaPress = false;
				cameraMovD = false;
				
			}
			if (e.keyCode == 87)
			{
				cameraMovC = false;
				wPress = false;
				cont = 0;
			}
		}
		
		public function limpar()
		{
			tempo.removeEventListener(TimerEvent.TIMER, atualizaTempo);
			tempoEfeitoAtk.removeEventListener(TimerEvent.TIMER, atualizaTempoAtk);
			diario.removeEventListener(MouseEvent.CLICK, cliqueNoBotao);
			removeEventListener(KeyboardEvent.KEY_DOWN, apertarTecla);
			removeEventListener(KeyboardEvent.KEY_UP, soltarTecla);
			
			if (camera.numChildren > 1)
			{
				while (camera.numChildren > 0)
				{
					camera.removeChildAt(0);
				}

			}
			
			if (this.numChildren > 1)
			{
				while (this.numChildren > 0)
				{
					this.removeChildAt(0);
				}

			}
			
			
			//diario = null;
			//circuloAtk = null;
			//barraDeVida = null;
			//barraDeEfeito = null;
			//caixaTextoTime = null;
			
			questoes = [];
				blocos = [];
				moedas = [];
				circulos = [];
				posicaoInimigo_lvl1 = [];
				inimigos_lvl1 = [];
				posicaoInimigo_lvl2 = [];
				inimigos_lvl2 = [];
				posicaoInimigo_lvl3 = [];
				inimigos_lvl3 = [];
				posicaoInimigo_lvl4 = [];
				inimigos_lvl4 = [];
				posicaoInimigo_lvl5 = [];
				inimigos_lvl5 = [];
				portas = [];
				nuvens = [];
				
				VariaveisLocais.cont2 = false;
				VariaveisLocais.removeInimigo = false;
				VariaveisLocais.contD = 0;
				VariaveisLocais.contC = 0;
				VariaveisLocais.abrirDiario = true;
				VariaveisLocais.RecuarMascara = false;
				VariaveisLocais.cont3 = false;
				VariaveisLocais.timeOver = false;
				VariaveisLocais.timeLoser = false;
 				VariaveisLocais.removeCaixa = false;
				VariaveisLocais.contDiario = false;
				
				VariaveisLocais.limpar = true;
			
			this.stop();
			
		}

	}// fim classe

}// fim  pacote